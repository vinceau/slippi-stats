{"version":3,"sources":["lib/stats/types.ts","lib/winner.ts","styles/images/obs.png","lib/stats/definitions/firstBlood.ts","lib/stats/definitions/lCancelAccuracy.ts","lib/stats/definitions/neutralOpenerMoves.ts","lib/stats/definitions/killMoves.ts","lib/stats/definitions/selfDestructs.ts","lib/stats/definitions/highestDamagePunish.ts","lib/exists.ts","lib/stats/definitions/index.js","lib/stats/compute.ts","lib/stats/params.ts","lib/stats/filterGames.js","lib/readFile.ts","containers/StatOptions/index.tsx","styles/images/powered-by.png","containers/StatOptions/Option.tsx","containers/StatOptions/StatOptionItem.tsx","containers/StatOptions/StatOptionList.tsx","styles/opacity.ts","lib/demo.ts","styles/theme.tsx","lib/searchParams.ts","views/RandomView.tsx","store/reducers.ts","store/context.tsx","components/ExternalLink.tsx","components/Header.tsx","components/DropPad.tsx","components/ErrorMessage.tsx","lib/resources.ts","components/FileList/FileItem.tsx","components/FileList/index.tsx","containers/FileListInput.tsx","views/MainView.tsx","components/CopyToClipboard.tsx","components/OBSDragButton.tsx","lib/hooks/useParam.ts","lib/hooks/useKeyPress.ts","lib/hooks/useOnClickOutside.ts","components/ColorPicker/ColorPicker.tsx","components/ColorPicker/DualColorPicker.tsx","containers/Options/Panel.tsx","containers/Options/index.tsx","containers/CharDisplay.tsx","components/Block/Block.tsx","components/InlineEdit/index.tsx","components/Block/EditBlock.tsx","containers/NameBlock.tsx","components/HeadToHead.tsx","components/StageTimer.tsx","components/GameDisplay/GameResult.tsx","components/GameDisplay/index.tsx","containers/StatDisplay/Divider.tsx","containers/StatDisplay/StatDisplayItem.tsx","components/Stat.tsx","containers/StatDisplay/Statistic.tsx","containers/StatDisplay/StatDisplayList.tsx","containers/StatDisplay/index.tsx","lib/hooks/useGames.ts","containers/RenderDisplay.tsx","views/RenderView.tsx","App.tsx","serviceWorker.ts","index.tsx","lib/util.ts","lib/portColor.ts","components/Buttons.tsx"],"names":["Stat","findWinner","lastFrame","Object","keys","players","map","i","post","reduce","a","b","stocksRemaining","percent","playerIndex","module","exports","firstBlood","name","type","betterDirection","recommendedRounding","calculate","games","firstBloodStocks","game","deathStocks","stats","stocks","filter","stock","endPercent","firstStock","_","orderBy","ratio","count","item","length","result","simple","text","isNaN","toFixed","this","number","lCancelAccuracy","totalLCancels","actionCounts","find","counts","lCancelCount","success","fail","tally","val","neutralOpenerMoves","neutralMoves","flatMap","conversions","get","conversion","isForPlayer","lastHitBy","isNeutralWin","openingType","moves","neutralMovesByMove","groupBy","neutralMoveCounts","move","first","moveId","id","moveUtil","getMoveName","shortName","getMoveShortName","orderedNeutralMoveCounts","topNeutralMove","simpleText","toUpperCase","killMoves","didKill","last","killMovesByMove","killMoveCounts","orderedKillMoveCounts","topKillMove","selfDestructs","sdCounts","playerEndedStocks","isPlayer","hasEndPercent","oppKillConversions","isOpp","sdSum","sum","highDamagePunishes","punishes","getDamageDone","punish","startPercent","orderedPunishes","topPunish","take","require","openingsPerKill","genOverallRatioStat","damagePerOpening","neutralWins","earlyKills","oppStocks","orderedOppStocks","earliestKillStock","lateDeaths","playerStocks","orderedPlayerStocks","latestDeathStock","inputsPerMinute","averageKillPercent","total","sumBy","genSimpleFromRatio","damageDone","field","fixedNum","statRatios","overallStats","keyBy","avg","averageRatios","ratios","STAT_DEFINITIONS","Map","computeStats","statsList","firstGame","orderIndices","settings","indices","chain","clone","reverse","value","statKey","def","output","results","iIndices","port","generateGameInfo","orderedGames","metadata","startAt","getResultForPlayer","gameEnd","gameEndMethod","lrasInitiatorIndex","latestFrame","playerInfoGen","player","characterName","characterId","characterUtil","getCharacterName","characterColor","getCharacterColorName","nametag","gameResult","generatePlayerInfo","stage","stageId","stageUtil","getStageName","startTime","duration","convertFrameCountToDurationString","set","OPENINGS_PER_KILL","DAMAGE_PER_OPENING","NEUTRAL_WINS","KILL_MOVES","NEUTRAL_OPENER_MOVES","FIRST_BLOOD","L_CANCEL","EARLY_KILLS","LATE_DEATHS","SELF_DESTRUCTS","INPUTS_PER_MINUTE","AVG_KILL_PERCENT","HIGH_DAMAGE_PUNISHES","DAMAGE_DONE","extractNameAndCode","playerPort","details","index","playerTag","netplayName","generateStatParams","gameDetails","filtered","gamesByIsSingles","nonSinglesGames","some","console","log","forEach","filePath","singlesGames","gamesByPorts","ports","join","gamesWithSamePorts","shift","flatGames","flatten","isEmpty","Error","filterGames","summary","generateOutput","err","error","params","lastGame","leftPlayer","rightPlayer","leftColor","getPortColor","rightColor","char1","char2","color1","color2","lastGameDetails","leftTag","leftCode","rightTag","rightCode","name1","name2","sub1","sub2","gt","gameKey","gameDuration","playerInfo","p","gameValue","s","readFileAsGameDetails","file","readFileAsSlippiGame","generateGameDetails","readFileAsArrayBuffer","data","arr","Int8Array","buf","Buffer","from","SlippiGame","getSettings","getStats","getMetadata","frames","getFrames","getLatestFrame","getGameEnd","Promise","resolve","reject","fr","FileReader","onabort","onerror","readAsBinaryString","addEventListener","string","resultString","Uint8Array","charCodeAt","buffer","readAsArrayBuffer","StatOptions","props","css","align","onClick","onClose","onChange","backgroundColor","color","hideReset","onReset","Outer","styled","div","checked","isDragging","Option","draggable","handleProps","rest","children","className","xmlns","width","height","viewBox","d","fill","StatOptionItem","stat","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","StatOptionList","statOptions","onDragEnd","destination","source","droppableId","newArray","reorder","droppableProps","option","key","statId","enabled","optionIndex","findIndex","o","newOptions","Array","toggle","placeholder","hasOpacity","initial","final","transition","LEGAL_STAGE_IDS","Stage","FOUNTAIN_OF_DREAMS","POKEMON_STADIUM","YOSHIS_STORY","DREAMLAND","BATTLEFIELD","FINAL_DESTINATION","getRandomArbitrary","min","max","Math","random","getRandomInt","ceil","floor","generateDemoValues","paramMap","generateRandomCharacter","totalGames","sampleSize","leftWillWin","playerInfos","undefined","stageIndex","generateRandomStageId","generateRandomDuration","generateRandomGame","demoStats","Boolean","generateRandomMove","toString","generateRandomStat","charId","charInfo","getCharacterInfo","colorIndex","colors","defaultTheme","primaryColor","secondaryColor","GlobalTheme","styles","generateSearchParams","restoredParams","res","localStorage","getItem","getStoredValues","URLSearchParams","Types","RandomView","search","to","pathname","initialState","files","AppContext","createContext","state","dispatch","mainReducer","action","SET_DETAILS","payload","filename","fileToReplace","f","loading","SET_ERROR","ADD_FILES","currentFiles","newFiles","existingFile","REMOVE_FILE","CLEAR_ALL","reducer","AppProvider","useReducer","Provider","ExternalLink","target","rel","Header","h1","Container","isDragAccept","isDragActive","getColor","DropPad","useDropzone","getRootProps","getInputProps","isDragReject","ErrorMessage","sanitize","replacement","toLowerCase","replace","getCharacterFolderFromId","character","charFolder","colorFolder","process","getCharacterFolderFromName","getCharacterPortrait","folder","BasicFileItem","onRemove","title","CharacterIcon","winner","src","getCharacterStockIcon","style","alt","FileItem","message","stageName","frame","winnerIndex","icons","FileList","ALL_STATS","DEFAULT_STATS","getDefaultStats","current","validateStatOptions","newItems","currentItems","c","includes","FileListInput","buttonColor","history","useHistory","useContext","React","useState","setError","showOptions","setShowOptions","defaultStats","statsModified","restoredStatsString","JSON","stringify","parse","setStatOptions","onStatOptionChange","options","setItem","onDrop","useCallback","acceptedFiles","Date","getTime","promises","all","then","time","finishedProcessing","buttonText","accept","disabled","generateStatsList","push","linkStyle","MainView","href","CopyToClipboard","copied","setCopied","timeoutMs","onCopyTimeoutMs","copyText","onCopyText","onCopy","setTimeout","DraggableLink","OBSDragButton","wrapperRef","useRef","location","window","entries","generateLink","onDragStart","e","img","Image","obsImage","dataTransfer","setDragImage","setData","handleDragStart","blur","handleDragEnd","preventDefault","marginRight","useParam","defaultValue","setValue","useLocation","useEffect","currentValue","setParam","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","upHandler","removeEventListener","useOnClickOutside","handler","listener","event","contains","document","ColorSquare","size","ResetButton","ColorPicker","defaultColor","show","setShow","showReset","position","hex","ColorContainer","ColorLabel","DualColorPicker","defaultLeftColor","defaultRightColor","leftLabel","rightLabel","onLeftColorChange","onRightColorChange","DualColorPanel","panelLabel","leftColorParam","leftDefault","rightColorParam","rightDefault","existingLeftColor","existingRightColor","setLeftColor","setRightColor","Panel","Content","Column","Heading","h2","Options","open","setOpen","charName1","getCharacterShortName","charName2","obsLayerName","outerRef","PortColor","P1","P2","RIGHT_CHAR_ALIGNMENT","Character","BOWSER","SHEIK","ROY","CharDisplay","colorParam","charParam","theme","char","facing","imgSrc","side","getCharacterVSScreen","alignment","defaultAlignment","customCharAlign","getAlignment","Block","InlineEdit","onSetText","textAlign","isInputActive","_setIsInputActive","inputValue","setInputValue","setIsInputActive","isActive","onFocus","onBlur","textRef","inputRef","tab","enter","esc","focus","maxWidth","defaultProps","OptionalBlock","OptionalEditBlock","onEdit","focused","setFocused","Name","Subtitle","NameBlock","nameParam","subtitleParam","setName","sub","setSub","borderColor","BaseHeadImage","HeadImage","invWaypoint","waypoint","dim","imageSrc","HeadToHead","result1","result2","p1","p2","Text","span","image","StageTimer","stageIcon","getStageIcon","switchResult","GameResult","gameInfo","onGameInfoChange","gameWinner","highlight","winningSide","GameDisplay","info","updateGameInfo","Divider","StatDisplayItem","hasItem","isDraggingOver","StatLabel","StatContent","TextContent","OuterStat","label","leftComponent","rightComponent","NumberStat","TextStat","ConnectedNumberStat","param1","param2","field1","setField1","field2","setField2","ConnectedTextStat","Statistic","statInfo","StatDisplayList","setStats","split","items","setItems","updateStats","statIds","dropProvided","dropSnapshot","dragProvided","dragSnapshot","additionalStyles","ScoreBlock","StatDisplay","setGames","left","right","score","setScore","parseInt","char1Score","char2Score","gameInfos","gameInfoString","setGame","gameNumber","currentGameData","newValues","assign","infoString","useGames","NameBlockContainer","RenderDisplay","RenderView","showSlippiLogo","poweredByImage","Settings","Fragment","hot","basename","exact","path","component","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","frameCount","totalFrames","moment","utc","as","format","list","startIndex","endIndex","splice","removed","portNumber","P3","P4","PrimaryButton","button","SecondaryButton"],"mappings":"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","file":"static/js/main.bd5b1370.chunk.js","sourcesContent":["import { FrameEntryType, FramesType, GameEndType, GameStartType, MetadataType, StatsType } from \"@slippi/slippi-js\";\n\nexport enum Stat {\n  OPENINGS_PER_KILL = \"opk\",\n  DAMAGE_PER_OPENING = \"dpo\",\n  NEUTRAL_WINS = \"nw\",\n  KILL_MOVES = \"mckm\",\n  NEUTRAL_OPENER_MOVES = \"mcno\",\n  INPUTS_PER_MINUTE = \"ipm\",\n  AVG_KILL_PERCENT = \"akp\",\n  DAMAGE_DONE = \"tdd\",\n  EARLY_KILLS = \"ek\",\n  LATE_DEATHS = \"ld\",\n  SELF_DESTRUCTS = \"sd\",\n  HIGH_DAMAGE_PUNISHES = \"hdp\",\n\n  // Custom\n  FIRST_BLOOD = \"fb\",\n  L_CANCEL = \"lc\",\n}\n\nexport interface GameDetails {\n  filePath: string;\n  settings: GameStartType;\n  frames: FramesType;\n  stats: StatsType;\n  metadata: MetadataType;\n  latestFrame: FrameEntryType | null;\n  gameEnd: GameEndType | null;\n}\n\nexport interface StatCalculationResult {\n  result: any;\n  simple: any;\n}\n\nexport type StatCalculation = (games: GameDetails[], playerIndex: number) => StatCalculationResult;\n\nexport interface StatDefinition {\n  name: string;\n  type: string;\n  betterDirection?: string;\n  recommendedRounding?: number;\n  calculate: StatCalculation;\n}\n","import { FrameEntryType } from \"@slippi/slippi-js\";\n\n/**\n * Given the last frame of the game, determine the winner first based on stock count\n * then based on remaining percent.\n * If percents are tied, return the player with the lower port number by default.\n *\n * @returns the player index of the winner\n */\nexport const findWinner = (lastFrame: FrameEntryType): number => {\n  const postFrameEntries = Object.keys(lastFrame.players).map((i: any) => (lastFrame.players[i] as any).post);\n  const winnerPostFrame = postFrameEntries.reduce((a, b) => {\n    // Determine winner based on stock count\n    if (a.stocksRemaining > b.stocksRemaining) {\n      return a;\n    }\n    if (a.stocksRemaining < b.stocksRemaining) {\n      return b;\n    }\n\n    // Stocks are the same so determine winner based off remaining percent\n    if (a.percent < b.percent) {\n      return a;\n    }\n    if (a.percent > b.percent) {\n      return b;\n    }\n\n    // Just return a by default\n    return a;\n  });\n\n  return winnerPostFrame.playerIndex;\n};\n","module.exports = __webpack_public_path__ + \"static/media/obs.f3f8c219.png\";","import _ from \"lodash\";\n\nimport { StatDefinition } from \"../types\";\n\nexport const firstBlood: StatDefinition = {\n  name: \"First Blood\",\n  type: \"number\",\n  betterDirection: \"higher\",\n  recommendedRounding: 0,\n  calculate(games, playerIndex) {\n    // For each game return either the first blood stock if taken or null if lost\n    const firstBloodStocks = games.map((game, i) => {\n      const deathStocks = game.stats.stocks.filter((stock) => {\n        const hasEndPercent = stock.endPercent !== null;\n        return hasEndPercent;\n      });\n      const orderedDeathStocks = _.orderBy(deathStocks, [\"endFrame\"], [\"asc\"]);\n      const firstStock = orderedDeathStocks[0];\n      if (!firstStock || firstStock.playerIndex === playerIndex) {\n        // console.log(`player ${playerIndex} did not draw first blood in game ${i + 1}`);\n        return null;\n      }\n      return firstStock;\n    });\n    const firstBloodCount = firstBloodStocks.reduce((count, item) => (item !== null ? count + 1 : count), 0);\n    const ratio = firstBloodCount / firstBloodStocks.length;\n\n    const simple = {\n      text: isNaN(ratio) ? \"N/A\" : `${(ratio * 100).toFixed(this.recommendedRounding)}%`,\n      number: ratio,\n    };\n\n    return {\n      result: firstBloodStocks,\n      simple,\n    };\n  },\n};\n","import { StatDefinition } from \"../types\";\n\nexport const lCancelAccuracy: StatDefinition = {\n  name: \"L-Cancel Accuracy\",\n  type: \"number\",\n  betterDirection: \"higher\",\n  recommendedRounding: 0,\n  calculate(games, playerIndex) {\n    const lCancelsPerGame = games.map((game) => {\n      const actionCounts = game.stats.actionCounts.find((counts) => counts.playerIndex === playerIndex);\n      if (!actionCounts) {\n        return {\n          success: 0,\n          fail: 0,\n        };\n      }\n\n      return actionCounts.lCancelCount;\n    });\n\n    const totalLCancels = lCancelsPerGame.reduce(\n      (tally, val) => ({\n        success: tally.success + val.success,\n        fail: tally.fail + val.fail,\n      }),\n      { success: 0, fail: 0 }\n    );\n    const ratio = totalLCancels.success / (totalLCancels.success + totalLCancels.fail);\n\n    return {\n      result: totalLCancels,\n      simple: {\n        text: isNaN(ratio) ? \"N/A\" : `${(ratio * 100).toFixed(this.recommendedRounding)}%`,\n        number: ratio,\n      },\n    };\n  },\n};\n","import { moves as moveUtil } from \"@slippi/slippi-js\";\nimport _ from \"lodash\";\n\nimport { StatDefinition } from \"../types\";\n\nexport const neutralOpenerMoves: StatDefinition = {\n  name: \"Most Common Neutral Opener\",\n  type: \"text\",\n  calculate(games, playerIndex) {\n    const neutralMoves = _.flatMap(games, (game) => {\n      const conversions = _.get(game, [\"stats\", \"conversions\"]) ?? [];\n      const conversionsForPlayer = _.filter(conversions, (conversion) => {\n        const isForPlayer = conversion.lastHitBy === playerIndex;\n        const isNeutralWin = conversion.openingType === \"neutral-win\";\n        return isForPlayer && isNeutralWin;\n      });\n\n      return conversionsForPlayer.filter(({ moves }) => moves.length > 0).map((conversion) => conversion.moves[0]);\n    });\n\n    // TODO: This following code is repeated from kill move code, put in function\n    const neutralMovesByMove = _.groupBy(neutralMoves, \"moveId\");\n    const neutralMoveCounts = _.map(neutralMovesByMove, (moves) => {\n      const move = _.first(moves);\n      const moveId = move ? move.moveId : -1;\n      return {\n        count: moves.length,\n        id: moveId,\n        name: moveUtil.getMoveName(moveId),\n        shortName: moveUtil.getMoveShortName(moveId),\n      };\n    });\n\n    const orderedNeutralMoveCounts = _.orderBy(neutralMoveCounts, [\"count\"], [\"desc\"]);\n    const topNeutralMove = _.first(orderedNeutralMoveCounts);\n    let simpleText = \"N/A\";\n    if (topNeutralMove) {\n      simpleText = `${topNeutralMove.shortName} - ${topNeutralMove.count}`;\n    }\n\n    return {\n      result: orderedNeutralMoveCounts,\n      simple: {\n        text: simpleText.toUpperCase(),\n      },\n    };\n  },\n};\n","import { moves as moveUtil } from \"@slippi/slippi-js\";\nimport _ from \"lodash\";\n\nimport { StatDefinition } from \"../types\";\n\nexport const killMoves: StatDefinition = {\n  name: \"Most Common Kill Move\",\n  type: \"text\",\n  calculate(games, playerIndex) {\n    const killMoves = _.flatMap(games, (game) => {\n      const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n      const conversionsForPlayer = _.filter(conversions, (conversion) => {\n        const isForPlayer = conversion.lastHitBy === playerIndex;\n        const didKill = conversion.didKill;\n        return isForPlayer && didKill;\n      });\n\n      return conversionsForPlayer.map((conversion) => _.last(conversion.moves));\n    });\n\n    const killMovesByMove = _.groupBy(killMoves, \"moveId\");\n    const killMoveCounts = _.map(killMovesByMove, (moves) => {\n      const move = moves[0];\n      if (move) {\n        return {\n          count: moves.length,\n          id: move.moveId,\n          name: moveUtil.getMoveName(move.moveId),\n          shortName: moveUtil.getMoveShortName(move.moveId),\n        };\n      }\n\n      // Move is undefined so apparently this means it was a grab release??\n      return {\n        count: moves.length,\n        id: -1,\n        name: \"Grab Release\",\n        shortName: \"grab release\",\n      };\n    });\n\n    const orderedKillMoveCounts = _.orderBy(killMoveCounts, [\"count\"], [\"desc\"]);\n    const topKillMove = _.first(orderedKillMoveCounts);\n    let simpleText = \"N/A\";\n    if (topKillMove) {\n      simpleText = `${topKillMove.shortName} - ${topKillMove.count}`;\n    }\n\n    return {\n      result: orderedKillMoveCounts,\n      simple: {\n        text: simpleText.toUpperCase(),\n      },\n    };\n  },\n};\n","import _ from \"lodash\";\n\nimport { StatDefinition } from \"../types\";\n\nexport const selfDestructs: StatDefinition = {\n  // Only show this one if greater than 2 for one player\n  name: \"Total Self-Destructs\",\n  type: \"number\",\n  betterDirection: \"lower\",\n  recommendedRounding: 0,\n  calculate(games, playerIndex) {\n    const sdCounts = _.map(games, (game) => {\n      const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n      const playerEndedStocks = _.filter(stocks, (stock) => {\n        const isPlayer = stock.playerIndex === playerIndex;\n        const hasEndPercent = stock.endPercent !== null;\n        return isPlayer && hasEndPercent;\n      });\n\n      const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n      const oppKillConversions = _.filter(conversions, (conversion) => {\n        const isOpp = conversion.playerIndex === playerIndex;\n        const didKill = conversion.didKill;\n        return isOpp && didKill;\n      });\n\n      return playerEndedStocks.length - oppKillConversions.length;\n    });\n\n    const sdSum = _.sum(sdCounts);\n\n    return {\n      result: sdSum,\n      simple: {\n        number: sdSum,\n        text: `${sdSum}`,\n      },\n    };\n  },\n};\n","import { ConversionType } from \"@slippi/slippi-js\";\nimport { exists } from \"lib/exists\";\nimport _ from \"lodash\";\n\nimport { StatDefinition } from \"../types\";\n\nexport const highDamagePunishes: StatDefinition = {\n  name: \"Highest Damage Punish\",\n  type: \"number\",\n  betterDirection: \"higher\",\n  recommendedRounding: 1,\n  calculate(games, playerIndex) {\n    const punishes = _.flatMap(games, (game) => {\n      const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n      return _.filter(conversions, (conversion) => {\n        const isForPlayer = conversion.playerIndex !== playerIndex;\n        const hasEndPercent = conversion.endPercent !== null;\n        return isForPlayer && hasEndPercent;\n      });\n    });\n\n    const getDamageDone = (punish: ConversionType) => {\n      if (exists(punish.endPercent)) {\n        return punish.endPercent - punish.startPercent;\n      }\n      return 0;\n    };\n\n    const orderedPunishes = _.orderBy(punishes, [getDamageDone], \"desc\");\n    const topPunish = _.first(orderedPunishes);\n    const simple = {\n      text: \"N/A\",\n      number: null as number | null,\n    };\n\n    if (topPunish) {\n      simple.number = getDamageDone(topPunish);\n      simple.text = simple.number.toFixed(this.recommendedRounding);\n    }\n\n    return {\n      result: _.take(orderedPunishes, 5),\n      simple: simple,\n    };\n  },\n};\n","// Based on https://github.com/wilsonzlin/edgesearch/blob/d03816dd4b18d3d2eb6d08cb1ae14f96f046141d/demo/wiki/client/src/util/util.ts\n\n// Ensures value is not null or undefined.\n// != does no type validation so we don't need to explcitly check for undefined.\nexport function exists<T>(value: T | null | undefined): value is T {\n  return value != null;\n}\n","/* eslint-disable */\n\n/*\n * Taken from: https://github.com/project-slippi/slippi-set-stats/blob/master/main.js\n */\n\nconst _ = require(\"lodash\");\n\nexport * from \"./firstBlood\";\nexport * from \"./lCancelAccuracy\";\nexport * from \"./neutralOpenerMoves\";\nexport * from \"./killMoves\";\nexport * from \"./selfDestructs\";\nexport * from \"./highestDamagePunish\";\n\nexport const openingsPerKill = {\n  name: \"Openings / Kill\",\n  type: \"number\",\n  betterDirection: \"lower\",\n  recommendedRounding: 1,\n  calculate(games, playerIndex) {\n    return genOverallRatioStat(games, playerIndex, \"openingsPerKill\", this.recommendedRounding);\n  },\n};\n\nexport const damagePerOpening = {\n  name: \"Damage / Opening\",\n  type: \"number\",\n  betterDirection: \"higher\",\n  recommendedRounding: 1,\n  calculate(games, playerIndex) {\n    return genOverallRatioStat(games, playerIndex, \"damagePerOpening\", this.recommendedRounding);\n  },\n};\n\nexport const neutralWins = {\n  name: \"Neutral Wins\",\n  type: \"number\",\n  betterDirection: \"higher\",\n  recommendedRounding: 0,\n  calculate(games, playerIndex) {\n    return genOverallRatioStat(games, playerIndex, \"neutralWinRatio\", this.recommendedRounding, \"count\");\n  },\n};\n\nexport const earlyKills = {\n  name: \"Earliest Kill\",\n  type: \"number\",\n  betterDirection: \"lower\",\n  recommendedRounding: 1,\n  calculate(games, playerIndex) {\n    const oppStocks = _.flatMap(games, (game) => {\n      const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n      return _.filter(stocks, (stock) => {\n        const isOpp = stock.playerIndex !== playerIndex;\n        const hasEndPercent = stock.endPercent !== null;\n        return isOpp && hasEndPercent;\n      });\n    });\n\n    const orderedOppStocks = _.orderBy(oppStocks, [\"endPercent\"], [\"asc\"]);\n    const earliestKillStock = _.first(orderedOppStocks);\n    const simple = {\n      text: \"N/A\",\n      number: null,\n    };\n\n    if (earliestKillStock) {\n      simple.number = earliestKillStock.endPercent;\n      simple.text = simple.number.toFixed(this.recommendedRounding);\n    }\n\n    return {\n      result: _.take(orderedOppStocks, 5),\n      simple: simple,\n    };\n  },\n};\n\nexport const lateDeaths = {\n  name: \"Latest Death\",\n  type: \"number\",\n  betterDirection: \"higher\",\n  recommendedRounding: 0,\n  calculate(games, playerIndex) {\n    const playerStocks = _.flatMap(games, (game) => {\n      const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n      return _.filter(stocks, (stock) => {\n        const isPlayer = stock.playerIndex === playerIndex;\n        const hasEndPercent = stock.endPercent !== null;\n        return isPlayer && hasEndPercent;\n      });\n    });\n\n    const orderedPlayerStocks = _.orderBy(playerStocks, [\"endPercent\"], [\"desc\"]);\n    const latestDeathStock = _.first(orderedPlayerStocks);\n    const simple = {\n      text: \"N/A\",\n      number: null,\n    };\n\n    if (latestDeathStock) {\n      simple.number = latestDeathStock.endPercent;\n      simple.text = simple.number.toFixed(this.recommendedRounding);\n    }\n\n    return {\n      result: _.take(orderedPlayerStocks, 5),\n      simple: simple,\n    };\n  },\n};\n\nexport const inputsPerMinute = {\n  name: \"Inputs / Minute\",\n  type: \"number\",\n  betterDirection: \"higher\",\n  recommendedRounding: 0,\n  calculate(games, playerIndex) {\n    return genOverallRatioStat(games, playerIndex, \"inputsPerMinute\", this.recommendedRounding);\n  },\n};\n\nexport const averageKillPercent = {\n  name: \"Average Kill Percent\",\n  type: \"number\",\n  betterDirection: \"lower\",\n  recommendedRounding: 0,\n  calculate(games, playerIndex) {\n    const oppStocks = _.flatMap(games, (game) => {\n      const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n      return _.filter(stocks, (stock) => {\n        const isOpp = stock.playerIndex !== playerIndex;\n        const hasEndPercent = stock.endPercent !== null;\n        return isOpp && hasEndPercent;\n      });\n    });\n\n    const result = {\n      total: oppStocks.length,\n      count: _.sumBy(oppStocks, \"endPercent\") || 0,\n    };\n\n    result.ratio = result.total ? result.count / result.total : null;\n\n    return {\n      result: result,\n      simple: genSimpleFromRatio(result, this.recommendedRounding),\n    };\n  },\n};\n\nexport const damageDone = {\n  name: \"Total Damage Done\",\n  type: \"number\",\n  betterDirection: \"higher\",\n  recommendedRounding: 0,\n  calculate(games, playerIndex) {\n    return genOverallRatioStat(games, playerIndex, \"damagePerOpening\", this.recommendedRounding, \"count\");\n  },\n};\n\nfunction genOverallRatioStat(games, playerIndex, field, fixedNum, type = \"ratio\") {\n  const statRatios = _.map(games, (game) => {\n    const overallStats = _.get(game, [\"stats\", \"overall\"]);\n    const overallStatsByPlayer = _.keyBy(overallStats, \"playerIndex\");\n    const overallStatsForPlayer = overallStatsByPlayer[playerIndex];\n    return overallStatsForPlayer[field];\n  });\n\n  const avg = averageRatios(statRatios);\n  const simple = genSimpleFromRatio(avg, fixedNum, type);\n\n  return {\n    result: avg,\n    simple: simple,\n  };\n}\n\nfunction averageRatios(ratios) {\n  const result = {};\n\n  result.count = _.sumBy(ratios, \"count\") || 0;\n  result.total = _.sumBy(ratios, \"total\") || 0;\n  result.ratio = result.total ? result.count / result.total : null;\n\n  return result;\n}\n\nfunction genSimpleFromRatio(ratio, fixedNum, type = \"ratio\") {\n  const result = {};\n\n  switch (type) {\n    case \"ratio\":\n      result.number = ratio.ratio;\n      result.text = ratio.ratio !== null ? ratio.ratio.toFixed(fixedNum) : \"N/A\";\n      break;\n    case \"count\":\n      result.number = ratio.count;\n      result.text = ratio.count.toFixed(fixedNum);\n      break;\n  }\n\n  return result;\n}\n","/*\n * Based on: https://github.com/project-slippi/slippi-set-stats/blob/master/main.js\n */\n\nimport { characters as characterUtil, stages as stageUtil } from \"@slippi/slippi-js\";\nimport { PlayerType } from \"@slippi/slippi-js\";\nimport _ from \"lodash\";\n\nimport { convertFrameCountToDurationString } from \"../util\";\nimport { findWinner } from \"../winner\";\nimport {\n  averageKillPercent,\n  damageDone,\n  damagePerOpening,\n  earlyKills,\n  firstBlood,\n  highDamagePunishes,\n  inputsPerMinute,\n  killMoves,\n  lateDeaths,\n  lCancelAccuracy,\n  neutralOpenerMoves,\n  neutralWins,\n  openingsPerKill,\n  selfDestructs,\n} from \"./definitions\";\nimport { GameDetails, Stat, StatDefinition } from \"./types\";\n\nexport const STAT_DEFINITIONS = new Map<string, StatDefinition>();\nSTAT_DEFINITIONS.set(Stat.OPENINGS_PER_KILL, openingsPerKill);\nSTAT_DEFINITIONS.set(Stat.DAMAGE_PER_OPENING, damagePerOpening);\nSTAT_DEFINITIONS.set(Stat.NEUTRAL_WINS, neutralWins);\nSTAT_DEFINITIONS.set(Stat.KILL_MOVES, killMoves);\nSTAT_DEFINITIONS.set(Stat.NEUTRAL_OPENER_MOVES, neutralOpenerMoves);\nSTAT_DEFINITIONS.set(Stat.FIRST_BLOOD, firstBlood);\nSTAT_DEFINITIONS.set(Stat.L_CANCEL, lCancelAccuracy);\nSTAT_DEFINITIONS.set(Stat.EARLY_KILLS, earlyKills);\nSTAT_DEFINITIONS.set(Stat.LATE_DEATHS, lateDeaths);\nSTAT_DEFINITIONS.set(Stat.SELF_DESTRUCTS, selfDestructs);\nSTAT_DEFINITIONS.set(Stat.INPUTS_PER_MINUTE, inputsPerMinute);\nSTAT_DEFINITIONS.set(Stat.AVG_KILL_PERCENT, averageKillPercent);\nSTAT_DEFINITIONS.set(Stat.HIGH_DAMAGE_PUNISHES, highDamagePunishes);\nSTAT_DEFINITIONS.set(Stat.DAMAGE_DONE, damageDone);\n\nfunction computeStats(statsList: string[], games: GameDetails[]) {\n  const firstGame = _.first(games);\n  if (!firstGame) {\n    return [];\n  }\n\n  // console.log(firstGame);\n  const orderIndices = _.map(firstGame.settings.players, \"playerIndex\");\n  const reversedIndices = _.chain(orderIndices).clone().reverse().value();\n  const indices = [orderIndices, reversedIndices];\n\n  const statResults = statsList.map((statKey) => {\n    const def = STAT_DEFINITIONS.get(statKey);\n    if (!def || !def.calculate) {\n      return null;\n    }\n\n    const { calculate, ...output } = def;\n    const results = _.map(indices, (iIndices) => {\n      const result: any = def.calculate(games, iIndices[0] /*, iIndices[1]*/);\n      result.port = iIndices[0] + 1;\n      return result;\n    });\n\n    return {\n      ...output,\n      id: statKey,\n      results,\n    };\n  });\n\n  return statResults;\n}\n\nfunction generateGameInfo(games: GameDetails[]) {\n  const getStartAt = (game: GameDetails) => game.metadata.startAt;\n  const orderedGames = _.orderBy(games, [getStartAt], [\"asc\"]);\n\n  const getResultForPlayer = (game: GameDetails, playerIndex: number): \"winner\" | \"loser\" | \"unknown\" => {\n    const gameEnd = game.gameEnd;\n    if (gameEnd) {\n      // Handle LRAS\n      switch (gameEnd.gameEndMethod) {\n        case 7:\n          return gameEnd.lrasInitiatorIndex === playerIndex ? \"loser\" : \"winner\";\n      }\n    }\n\n    const latestFrame = game.latestFrame;\n    if (!latestFrame) {\n      return \"unknown\";\n    }\n    const winner = findWinner(latestFrame);\n    return winner === playerIndex ? \"winner\" : \"loser\";\n  };\n\n  const generatePlayerInfo = (game: GameDetails) => (player: PlayerType) => {\n    // console.log(player);\n    const characterName =\n      player.characterId !== null ? characterUtil.getCharacterName(player.characterId) : `Player ${player.port}`;\n    const characterColor =\n      player.characterId !== null && player.characterColor !== null\n        ? characterUtil.getCharacterColorName(player.characterId, player.characterColor)\n        : \"Default\";\n\n    return {\n      port: player.port,\n      characterId: player.characterId,\n      nametag: player.nametag,\n      characterName,\n      characterColor,\n      gameResult: getResultForPlayer(game, player.playerIndex),\n    };\n  };\n\n  return _.map(orderedGames, (game: GameDetails) => {\n    const playerInfoGen = generatePlayerInfo(game);\n\n    return {\n      stage: {\n        id: game.settings.stageId,\n        name: game.settings.stageId !== null ? stageUtil.getStageName(game.settings.stageId) : \"\",\n      },\n      players: _.map(game.settings.players, playerInfoGen),\n      startTime: game.metadata.startAt,\n      duration: convertFrameCountToDurationString(game.stats.lastFrame),\n    };\n  });\n}\n\nexport function generateOutput(statsList: string[], games: GameDetails[]) {\n  return {\n    games: generateGameInfo(games),\n    summary: computeStats(statsList, games),\n  };\n}\n","import { get } from \"lodash\";\n\nimport { getPortColor } from \"../portColor\";\nimport { generateOutput } from \"./compute\";\nimport { filterGames } from \"./filterGames\";\nimport { GameDetails } from \"./types\";\n\nconst extractNameAndCode = (playerPort: number, details: GameDetails) => {\n  const settings = details.settings;\n  const metadata = details.metadata;\n  const index = playerPort - 1;\n  const player = settings.players.find((player) => player.playerIndex === index);\n  const playerTag = player ? player.nametag : null;\n  const netplayName: string | null = get(metadata, [\"players\", index, \"names\", \"netplay\"], null);\n  const netplayCode: string | null = get(metadata, [\"players\", index, \"names\", \"code\"], null);\n  const name = playerTag || netplayName || \"\";\n  return [name, netplayCode || \"\"] as const;\n};\n\nexport function generateStatParams(gameDetails: GameDetails[], statsList: string[]): Record<string, any> {\n  const filtered = filterGames(gameDetails);\n  if (!filtered || filtered.length === 0) {\n    throw new Error(\"No valid games\");\n  }\n\n  let stats;\n  try {\n    stats = generateOutput(statsList, filtered);\n  } catch (err) {\n    console.error(err);\n    throw new Error(err);\n  }\n\n  const { games, summary } = stats;\n  console.log(\"generated stats: \", stats);\n  const params: Record<string, any> = {}; // \"mckm1\": , \"mckm2\", \"mcno1\", \"mcno2\", \"opk1\", \"opk2\", \"tdd1\", \"tdd2\", \"dpo1\", \"dpo2\", \"ipm1\", \"ipm2\", \"akp1\", \"akp2\", \"nw1\", \"nw2\"};\n\n  // Set character info\n  const lastGame = games[games.length - 1];\n  const leftPlayer = lastGame.players[0];\n  const rightPlayer = lastGame.players[1];\n  params.leftColor = getPortColor(leftPlayer.port);\n  params.rightColor = getPortColor(rightPlayer.port);\n\n  params.char1 = leftPlayer.characterId;\n  params.char2 = rightPlayer.characterId;\n  params.color1 = leftPlayer.characterColor;\n  params.color2 = rightPlayer.characterColor;\n\n  // Set name tags\n  const lastGameDetails = filtered[filtered.length - 1];\n  const [leftTag, leftCode] = extractNameAndCode(leftPlayer.port, lastGameDetails);\n  const [rightTag, rightCode] = extractNameAndCode(rightPlayer.port, lastGameDetails);\n  params.name1 = leftTag.toUpperCase() || leftPlayer.characterName;\n  params.name2 = rightTag.toUpperCase() || rightPlayer.characterName;\n  params.sub1 = leftCode;\n  params.sub2 = rightCode;\n\n  // Set game info\n  params.gt = games.length; // Set the total number of games\n\n  games.forEach((game, i) => {\n    // console.log(\"processing game: \", game);\n    const gameKey = `g${i + 1}`;\n    const stageId = game.stage.id as number;\n    const gameDuration: string = game.duration;\n    const playerInfo = game.players.map((p: any) => [p.characterId, p.characterColor, p.gameResult].join(\",\"));\n    const gameValue = [stageId, gameDuration, ...playerInfo].join(\",\");\n    // console.log(`${gameKey} : ${gameValue}`);\n    params[gameKey] = gameValue;\n  });\n\n  params.stats = statsList.join(\",\");\n  // Set the stat values\n  summary.forEach((s) => {\n    // Stats can be null if the id is invalid or not specified\n    if (!s) {\n      return;\n    }\n\n    switch (s.id) {\n      // Put any custom logic here\n      default: {\n        (s.results as any[]).forEach((result, i) => {\n          params[`${s.id}${i + 1}`] = result.simple.text;\n        });\n        break;\n      }\n    }\n  });\n\n  console.log(\"returning these params: \", params);\n  return params;\n}\n","/* eslint-disable */\n\n/*\n * Taken from: https://github.com/project-slippi/slippi-set-stats/blob/master/main.js\n */\n\nimport _ from \"lodash\";\n\nexport function filterGames(games) {\n  // console.log(games);\n  const gamesByIsSingles = _.groupBy(games, (game) => {\n    const numberOfPlayers = game.settings.players.length;\n    return numberOfPlayers === 2;\n  });\n\n  const nonSinglesGames = _.get(gamesByIsSingles, false) || [];\n  if (_.some(nonSinglesGames)) {\n    console.log(\"The following games have been excluded because they are not singles games:\");\n    _.forEach(nonSinglesGames, (game) => {\n      console.log(game.filePath);\n    });\n    console.log();\n  }\n\n  const singlesGames = _.get(gamesByIsSingles, true) || [];\n  const gamesByPorts = _.chain(singlesGames)\n    .groupBy((game) => {\n      const ports = _.map(game.settings.players, \"port\");\n      return _.join(ports, \"-\");\n    })\n    .orderBy([\"length\"], [\"desc\"])\n    .value();\n\n  const gamesWithSamePorts = gamesByPorts.shift();\n  if (_.some(gamesByPorts)) {\n    console.log(\"The following games have been excluded because the player ports differ:\");\n    const flatGames = _.flatten(gamesByPorts);\n    _.forEach(flatGames, (game) => {\n      console.log(game.filePath);\n    });\n    console.log();\n  }\n\n  if (_.isEmpty(gamesWithSamePorts)) {\n    throw new Error(\"There were no valid games found to compute stats from.\");\n  }\n\n  console.log(`Including ${gamesWithSamePorts.length} games for stat calculation...`);\n\n  return gamesWithSamePorts;\n}\n","import { SlippiGame } from \"@slippi/slippi-js\";\n\nimport { GameDetails } from \"./stats/types\";\n\nexport async function readFileAsGameDetails(file: File): Promise<GameDetails> {\n  const game = await readFileAsSlippiGame(file);\n  return generateGameDetails(file.name, game);\n}\n\nasync function readFileAsSlippiGame(file: File): Promise<SlippiGame> {\n  const data = (await readFileAsArrayBuffer(file)) as ArrayBuffer;\n  const arr = new Int8Array(data);\n  const buf = Buffer.from(arr);\n  return new SlippiGame(buf);\n}\n\nfunction generateGameDetails(name: string, game: SlippiGame): GameDetails {\n  // For a valid SLP game, at the very least we should have valid settings\n  const settings = game.getSettings();\n  if (!settings) {\n    throw new Error(`Invalid SLP file. Could not find game settings in file: ${name}`);\n  }\n\n  const stats = game.getStats();\n  if (!stats) {\n    throw new Error(`Failed to process game stats for file: ${name}`);\n  }\n\n  const metadata = game.getMetadata();\n  if (!metadata) {\n    throw new Error(`Failed to load metadata for file: ${name}`);\n  }\n\n  return {\n    filePath: name,\n    settings,\n    frames: game.getFrames(),\n    stats,\n    metadata,\n    latestFrame: game.getLatestFrame(),\n    gameEnd: game.getGameEnd(),\n  };\n}\n\nasync function readFileAsArrayBuffer(file: File): Promise<string | ArrayBufferLike> {\n  return new Promise((resolve, reject) => {\n    const fr = new FileReader();\n    fr.onabort = () => reject(\"file reading was aborted\");\n    fr.onerror = () => reject(\"file reading has failed\");\n    if (fr.readAsBinaryString) {\n      fr.addEventListener(\n        \"load\",\n        function () {\n          const string = (this as any).resultString != null ? (this as any).resultString : this.result;\n          const result = new Uint8Array(string.length);\n          for (let i = 0; i < string.length; i++) {\n            result[i] = string.charCodeAt(i);\n          }\n          resolve(result.buffer);\n        },\n        false\n      );\n      fr.readAsBinaryString(file);\n    } else {\n      fr.addEventListener(\n        \"load\",\n        function () {\n          if (this.result) {\n            resolve(this.result);\n          } else {\n            reject(\"no data read\");\n          }\n        },\n        false\n      );\n      fr.readAsArrayBuffer(file);\n    }\n  });\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { PrimaryButton, SecondaryButton } from \"components/Buttons\";\nimport React from \"react\";\n\nimport { StatOptionList } from \"./StatOptionList\";\nimport { StatOption } from \"./types\";\n\nexport * from \"./types\";\n\ninterface StatOptionsProps {\n  onClose: () => void;\n  value: StatOption[];\n  onChange: (stats: StatOption[]) => void;\n  onReset: () => void;\n  hideReset?: boolean;\n}\n\nexport const StatOptions: React.FC<StatOptionsProps> = (props) => {\n  return (\n    <div\n      css={css`\n        display: flex;\n        flex-direction: column;\n        flex-wrap: nowrap;\n        height: 100%;\n        width: 100%;\n      `}\n    >\n      <SecondaryButton align=\"right\" onClick={props.onClose}>\n        close\n      </SecondaryButton>\n      <div\n        css={css`\n          overflow: auto;\n          display: flex;\n          flex-direction: column;\n          margin-bottom: 2rem;\n        `}\n      >\n        <StatOptionList value={props.value} onChange={props.onChange} />\n      </div>\n      <PrimaryButton backgroundColor=\"white\" color=\"black\" onClick={props.onClose}>\n        CLOSE\n      </PrimaryButton>\n      {!props.hideReset && <SecondaryButton onClick={props.onReset}>restore defaults</SecondaryButton>}\n    </div>\n  );\n};\n","module.exports = __webpack_public_path__ + \"static/media/powered-by.61867ea8.png\";","import styled from \"@emotion/styled\";\nimport React from \"react\";\n\nconst Outer = styled.div<{\n  checked?: boolean;\n  isDragging?: boolean;\n}>`\n  opacity: ${(p) => (p.checked ? \"1\" : \"0.5\")};\n  background-color: ${(p) => (p.isDragging ? \"rgba(0, 0, 0, 0.6)\" : \"rgba(0, 0, 0, 0.3)\")};\n  color: white;\n  padding: 0.5rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 0.5rem;\n  font-weight: ${(p) => (p.checked ? \"600\" : \"100\")};\n  ${(p) =>\n    p.isDragging\n      ? `\n    box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);\n    opacity: 1;\n`\n      : \"\"}\n\n  .title {\n    cursor: pointer;\n    user-select: none;\n    & > input[type=\"checkbox\"] {\n      margin-right: 1rem;\n    }\n  }\n  .handle {\n    display: flex;\n  }\n`;\n\nexport interface OptionProps extends Record<string, any> {\n  name: string;\n  checked?: boolean;\n  draggable?: boolean;\n  onChange: (checked: boolean) => void;\n  handleProps?: Record<string, any>;\n}\n\nexport const Option: React.FC<OptionProps> = (props) => {\n  const { name, checked, draggable, onChange, handleProps, children, ...rest } = props;\n  const toggle = () => props.onChange(!props.checked);\n  return (\n    <Outer checked={props.checked} {...rest}>\n      <label className=\"title\">\n        <input type=\"checkbox\" checked={props.checked} onChange={toggle} />\n        {name}\n      </label>\n      {draggable && (\n        <div className=\"handle\" {...handleProps}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n            <path d=\"M20 9H4v2h16V9zM4 15h16v-2H4v2z\" fill=\"#ffffff\" />\n          </svg>\n        </div>\n      )}\n    </Outer>\n  );\n};\n","import { STAT_DEFINITIONS } from \"lib/stats\";\nimport React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nimport { Option } from \"./Option\";\n\nexport const StatOptionItem: React.FC<{\n  checked: boolean;\n  index: number;\n  id: string;\n  onChange: (checked: boolean) => void;\n}> = (props) => {\n  const stat = STAT_DEFINITIONS.get(props.id);\n  if (!stat) {\n    return null;\n  }\n  return (\n    <Draggable draggableId={props.id} index={props.index}>\n      {(provided, snapshot) => (\n        <div ref={provided.innerRef}>\n          <Option\n            {...provided.draggableProps}\n            isDragging={snapshot.isDragging}\n            checked={props.checked}\n            onChange={props.onChange}\n            draggable={true}\n            name={stat.name}\n            handleProps={provided.dragHandleProps}\n          />\n        </div>\n      )}\n    </Draggable>\n  );\n};\n","import { reorder } from \"lib/util\";\nimport React from \"react\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\n\nimport { StatOptionItem } from \"./StatOptionItem\";\nimport { StatOption } from \"./types\";\n\ninterface StatOptionListProps {\n  value: StatOption[];\n  onChange: (options: StatOption[]) => void;\n}\n\nexport const StatOptionList: React.FC<StatOptionListProps> = (props) => {\n  const statOptions = props.value;\n  const onDragEnd = (result: any) => {\n    const { destination, source } = result;\n    if (!destination) {\n      return;\n    }\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n    const newArray = reorder(props.value, source.index, destination.index);\n    props.onChange(newArray);\n  };\n\n  const toggle = (statId: string) => {\n    const optionIndex = statOptions.findIndex((o) => o.statId === statId);\n    if (optionIndex === -1) {\n      return;\n    }\n    const newOptions = Array.from(statOptions);\n    const option = newOptions[optionIndex];\n    option.enabled = !option.enabled;\n    props.onChange(newOptions);\n  };\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"stat-option-list\">\n        {(provided) => (\n          <div ref={provided.innerRef} {...provided.droppableProps}>\n            {statOptions.map((option, i) => {\n              return (\n                <StatOptionItem\n                  key={option.statId}\n                  index={i}\n                  id={option.statId}\n                  checked={option.enabled}\n                  onChange={() => toggle(option.statId)}\n                />\n              );\n            })}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n","import { css } from \"@emotion/core\";\n\nexport const hasOpacity = (initial: number, final = 1, transition = \"opacity 0.2s ease-in-out\") => css`\n  opacity: ${initial};\n  transition: ${transition};\n  &:hover {\n    opacity: ${final};\n  }\n`;\n","import { characters as characterUtil, moves as moveUtil, Stage } from \"@slippi/slippi-js\";\nimport { sampleSize } from \"lodash\";\n\nimport { Stat, STAT_DEFINITIONS } from \"./stats\";\nimport { convertFrameCountToDurationString } from \"./util\";\n\nconst LEGAL_STAGE_IDS = [\n  Stage.FOUNTAIN_OF_DREAMS,\n  Stage.POKEMON_STADIUM,\n  Stage.YOSHIS_STORY,\n  Stage.DREAMLAND,\n  Stage.BATTLEFIELD,\n  Stage.FINAL_DESTINATION,\n];\n\n/*\n * Random functions are taken from: https://stackoverflow.com/questions/1527803/generating-random-whole-numbers-in-javascript-in-a-specific-range\n */\n\n/**\n * Returns a random number between min (inclusive) and max (exclusive)\n */\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\n/**\n * Returns a random integer between min (inclusive) and max (inclusive).\n * The value is no lower than min (or the next integer greater than min\n * if min isn't an integer) and no greater than max (or the next integer\n * lower than max if max isn't an integer).\n * Using Math.round() will give you a non-uniform distribution!\n */\nfunction getRandomInt(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function generateDemoValues(): Record<string, any> {\n  const paramMap: Record<string, any> = {};\n\n  // Set names\n  paramMap.name1 = \"FOLLOW\";\n  paramMap.name2 = \"ON\";\n  paramMap.sub1 = \"@_vinceau\";\n  paramMap.sub2 = \"TWITTER\";\n\n  // Set colors\n  const [char1, color1] = generateRandomCharacter();\n  const [char2, color2] = generateRandomCharacter();\n  paramMap.char1 = char1;\n  paramMap.color1 = color1;\n  paramMap.char2 = char2;\n  paramMap.color2 = color2;\n\n  // Random games\n  const totalGames = getRandomInt(3, 5);\n  paramMap.gt = totalGames;\n  sampleSize(LEGAL_STAGE_IDS, totalGames).forEach((stage, i) => {\n    const gameKey = `g${i + 1}`;\n    const leftWillWin = Math.random() < 0.5;\n    const leftPlayerInfo = [char1, color1, leftWillWin ? \"winner\" : \"loser\"].join(\",\");\n    const rightPlayerInfo = [char2, color2, leftWillWin ? \"loser\" : \"winner\"].join(\",\");\n    const gameValue = generateRandomGame([leftPlayerInfo, rightPlayerInfo], stage);\n    paramMap[gameKey] = gameValue;\n  });\n\n  const demoStats = [\n    Stat.KILL_MOVES,\n    Stat.NEUTRAL_OPENER_MOVES,\n    \"\",\n    Stat.OPENINGS_PER_KILL,\n    Stat.DAMAGE_DONE,\n    Stat.AVG_KILL_PERCENT,\n    Stat.NEUTRAL_WINS,\n  ];\n\n  paramMap.stats = demoStats.join(\",\");\n\n  demoStats\n    .filter((s) => Boolean(s))\n    .forEach((statId) => {\n      [1, 2].forEach((player) => {\n        const key = statId + player;\n        paramMap[key] = generateRandomStat(statId);\n      });\n    });\n  return paramMap;\n}\n\nfunction generateRandomStat(statId: string): string {\n  const stat = STAT_DEFINITIONS.get(statId);\n  if (!stat) {\n    return \"\";\n  }\n  switch (statId) {\n    case Stat.NEUTRAL_OPENER_MOVES:\n      return generateRandomMove();\n    case Stat.KILL_MOVES:\n      return generateRandomMove();\n    case Stat.OPENINGS_PER_KILL:\n      return getRandomArbitrary(5, 15).toFixed(stat.recommendedRounding);\n    case Stat.DAMAGE_DONE:\n      return getRandomArbitrary(1000, 2000).toFixed(stat.recommendedRounding);\n    case Stat.AVG_KILL_PERCENT:\n      return getRandomArbitrary(50, 200).toFixed(stat.recommendedRounding);\n    case Stat.NEUTRAL_WINS:\n      return getRandomInt(30, 80).toString();\n    default:\n      return \"\";\n  }\n}\n\nfunction generateRandomMove(): string {\n  const move = getRandomInt(7, 21);\n  const name = moveUtil.getMoveShortName(move).toUpperCase();\n  return `${name} - ${move}`;\n}\n\nfunction generateRandomCharacter() {\n  const charId = getRandomInt(0, 25);\n  const charInfo = characterUtil.getCharacterInfo(charId);\n  const colorIndex = getRandomInt(0, charInfo.colors.length - 1);\n  const color = charInfo.colors[colorIndex];\n  return [charId, color] as const;\n}\n\nfunction generateRandomStageId(): number {\n  const stageIndex = getRandomInt(0, LEGAL_STAGE_IDS.length - 1);\n  return LEGAL_STAGE_IDS[stageIndex];\n}\n\nfunction generateRandomDuration(): string {\n  // The number of frames in 30 seconds\n  const minFrames = 30 * 60;\n  // The number of frames in 8 minutes\n  const maxFrames = 8 * 60 * 60;\n  const frames = getRandomInt(minFrames, maxFrames);\n  return convertFrameCountToDurationString(frames);\n}\n\nfunction generateRandomGame(playerInfos: string[], stage?: Stage): string {\n  const stageId = stage !== undefined ? stage : generateRandomStageId();\n  const gameDuration = generateRandomDuration();\n  const gameValue = [stageId, gameDuration, ...playerInfos].join(\",\");\n  return gameValue;\n}\n","/** @jsx jsx */\nimport { css, Global, jsx } from \"@emotion/core\";\n\nexport interface Theme {\n  primaryColor: string;\n  secondaryColor: string;\n}\n\nexport const defaultTheme: Theme = {\n  primaryColor: \"#286163\",\n  secondaryColor: \"#121020\",\n};\n\nexport const GlobalTheme: React.FC<Theme> = ({ primaryColor, secondaryColor }) => {\n  return (\n    <Global\n      styles={css`\n        body.themed {\n          background: radial-gradient(circle at center -30%, ${primaryColor}, ${secondaryColor});\n        }\n      `}\n    />\n  );\n};\n","import { defaultTheme } from \"styles/theme\";\n\nfunction getStoredValues(keys: string[]): Record<string, string | null> {\n  const res: Record<string, string | null> = {};\n  keys.forEach((key) => {\n    const value = localStorage.getItem(key);\n    if (value) {\n      res[key] = value;\n    }\n  });\n  return res;\n}\n\nexport function generateSearchParams(params: Record<string, any>): URLSearchParams {\n  const restoredParams = getStoredValues([\"primaryColor\", \"secondaryColor\", \"leftColor\", \"rightColor\"]);\n  const searchParams = new URLSearchParams({\n    ...defaultTheme,\n    ...restoredParams,\n    ...params,\n  });\n  return searchParams;\n}\n","import { generateDemoValues } from \"lib/demo\";\nimport { generateSearchParams } from \"lib/searchParams\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nexport const RandomView: React.FC = () => {\n  const params = generateDemoValues();\n  const search = \"?\" + generateSearchParams(params).toString();\n  return (\n    <Redirect\n      to={{\n        pathname: \"/render\",\n        search,\n      }}\n    />\n  );\n};\n","import { GameDetails } from \"lib/stats/types\";\n\nimport { InitialStateType, ProcessedFile } from \"./types\";\n\ntype ActionMap<M extends { [index: string]: any }> = {\n  [Key in keyof M]: M[Key] extends undefined\n    ? {\n        type: Key;\n      }\n    : {\n        type: Key;\n        payload: M[Key];\n      };\n};\n\nexport enum Types {\n  ADD_FILES = \"ADD_FILES\",\n  SET_DETAILS = \"SET_DETAILS\",\n  SET_ERROR = \"SET_ERROR\",\n  REMOVE_FILE = \"REMOVE_FILE\",\n  CLEAR_ALL = \"CLEAR_ALL\",\n}\n\ntype ActionPayload = {\n  [Types.SET_DETAILS]: {\n    filename: string;\n    details: GameDetails;\n  };\n  [Types.SET_ERROR]: {\n    filename: string;\n    error: any;\n  };\n  [Types.ADD_FILES]: {\n    files: File[];\n  };\n  [Types.REMOVE_FILE]: {\n    filename: string;\n  };\n  [Types.CLEAR_ALL]: never;\n};\n\nexport type ReducerActions = ActionMap<ActionPayload>[keyof ActionMap<ActionPayload>];\n\nexport const reducer = (state: InitialStateType, action: ReducerActions) => {\n  switch (action.type) {\n    case Types.SET_DETAILS: {\n      const { filename, details } = action.payload;\n      const files = state.files;\n      const fileToReplace = files.findIndex((f) => f.filename === filename);\n      if (fileToReplace !== -1) {\n        files[fileToReplace].details = details;\n        files[fileToReplace].loading = false;\n      }\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.SET_ERROR: {\n      const { filename, error } = action.payload;\n      const files = state.files;\n      const fileToReplace = files.findIndex((f) => f.filename === filename);\n      if (fileToReplace !== -1) {\n        files[fileToReplace].error = error;\n        files[fileToReplace].loading = false;\n      }\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.ADD_FILES: {\n      const { files } = action.payload;\n      const currentFiles = state.files;\n      let newFiles: ProcessedFile[] = files.map((f) => ({\n        filename: f.name,\n        loading: true,\n        details: null,\n      }));\n\n      // Make sure there are no duplicate filenames\n      newFiles = newFiles.filter((f) => !currentFiles.find((existingFile) => f.filename === existingFile.filename));\n\n      return {\n        ...state,\n        files: [...currentFiles, ...newFiles],\n      };\n    }\n    case Types.REMOVE_FILE: {\n      const { filename } = action.payload;\n      const files = state.files.filter((f) => f.filename !== filename);\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.CLEAR_ALL: {\n      return {\n        ...state,\n        files: [],\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import React, { createContext, Dispatch, useReducer } from \"react\";\n\nimport { reducer, ReducerActions } from \"./reducers\";\nimport { InitialStateType } from \"./types\";\n\nconst initialState: InitialStateType = {\n  files: [],\n};\n\nconst AppContext = createContext<{\n  state: InitialStateType;\n  dispatch: Dispatch<ReducerActions>;\n}>({\n  state: initialState,\n  dispatch: () => null,\n});\n\nconst mainReducer = (state: InitialStateType, action: ReducerActions) => reducer(state, action);\n\nconst AppProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(mainReducer, initialState);\n\n  return <AppContext.Provider value={{ state, dispatch }}>{children}</AppContext.Provider>;\n};\n\nexport { AppProvider, AppContext };\n","import React from \"react\";\n\nexport const ExternalLink: React.FC<React.HTMLProps<HTMLAnchorElement>> = (props) => {\n  return (\n    <a target=\"_blank\" rel=\"noopener noreferrer\" {...props}>\n      {props.children}\n    </a>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const Header = styled.h1`\n  text-transform: uppercase;\n  font-weight: 800;\n  font-size: 5.5rem;\n  margin: 2rem;\n  padding-bottom: 1rem;\n  position: relative;\n  text-align: center;\n\n  &::before {\n    z-index: -1;\n    content: \"\";\n    display: block;\n    background-image: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.2), transparent);\n    height: 0.1rem;\n    position: absolute;\n    width: 80%;\n    margin-left: 50%;\n    transform: translateX(-50%);\n    bottom: 0;\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { DropzoneOptions, useDropzone } from \"react-dropzone\";\n\nconst getColor = (props: any) => {\n  if (props.isDragAccept) {\n    return \"#00e676\";\n  }\n  if (props.isDragActive) {\n    return \"#2196f3\";\n  }\n  return \"#eeeeee\";\n};\n\nconst Container = styled.div`\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  border-width: 2px;\n  border-color: ${(props) => getColor(props)};\n  border-style: dashed;\n  background-color: rgba(0, 0, 0, 0.3);\n  color: white;\n  outline: none;\n  transition: border 0.24s ease-in-out;\n  p {\n    text-align: center;\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n`;\n\nexport const DropPad: React.FC<Partial<DropzoneOptions>> = (props) => {\n  const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject } = useDropzone(props);\n\n  return (\n    <Container {...getRootProps({ isDragActive, isDragAccept, isDragReject })}>\n      <input {...getInputProps()} />\n      <p>Drag SLP files here or click to select</p>\n    </Container>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport React from \"react\";\n\nexport const ErrorMessage: React.FC = (props) => {\n  return (\n    <span\n      css={css`\n        color: #bf2600;\n        font-weight: bold;\n      `}\n    >\n      ERROR: {props.children}\n    </span>\n  );\n};\n","import { characters as characterUtil, stages as stageUtil } from \"@slippi/slippi-js\";\n\nexport type Side = \"left\" | \"right\";\n\nfunction sanitize(text: string, replacement = \"-\"): string {\n  return text.toLowerCase().replace(/[. &]+/gi, replacement);\n}\n\nfunction getCharacterFolderFromId(characterId: string | number, color?: string) {\n  const characterName = characterUtil.getCharacterName(+characterId);\n  return getCharacterFolderFromName(characterName, color);\n}\n\nfunction getCharacterFolderFromName(character: string, color = \"Default\") {\n  const charFolder = sanitize(character);\n  const colorFolder = sanitize(color);\n  return `${process.env.PUBLIC_URL}/images/characters/${charFolder}/${colorFolder}`;\n}\n\nexport function getCharacterPortrait(characterId: string | number, color?: string): string {\n  const folder = getCharacterFolderFromId(characterId, color);\n  return `${folder}/portrait.png`;\n}\n\nexport function getCharacterVSScreen(side: Side, characterId: string | number, color?: string): string {\n  const folder = getCharacterFolderFromId(characterId, color);\n  return `${folder}/vs-${side}.png`;\n}\n\nexport function getCharacterStockIcon(characterId: string | number, color?: string): string {\n  const folder = getCharacterFolderFromId(characterId, color);\n  return `${folder}/stock.png`;\n}\n\nexport function getStageIcon(stageId: string | number): string {\n  const stageName = stageUtil.getStageName(+stageId);\n  return `${process.env.PUBLIC_URL}/images/stages/${stageName}.png`;\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { characters as characterUtil, stages as stageUtil } from \"@slippi/slippi-js\";\nimport { ErrorMessage } from \"components/ErrorMessage\";\nimport { getCharacterStockIcon } from \"lib/resources\";\nimport { convertFrameCountToDurationString } from \"lib/util\";\nimport { findWinner } from \"lib/winner\";\nimport React from \"react\";\nimport { ProcessedFile } from \"store/types\";\nimport { hasOpacity } from \"styles/opacity\";\nimport { defaultTheme } from \"styles/theme\";\n\nconst BasicFileItem: React.FC<{ name: string; onRemove?: () => void }> = (props) => {\n  const { onRemove, name, children } = props;\n  return (\n    <div\n      css={css`\n        padding: 1.5rem 2rem;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        color: rgba(255, 255, 255, 0.8);\n        background-color: rgba(0, 0, 0, 0.3);\n        ${hasOpacity(0.8)};\n        &:hover {\n          .remove-button {\n            opacity: 1;\n          }\n        }\n        .remove-button {\n          opacity: 0;\n          transition: opacity 0.2s ease-in-out;\n          background: white;\n          color: ${defaultTheme.secondaryColor};\n          border: none;\n          font-weight: bold;\n          font-size: 2.5rem;\n          cursor: pointer;\n          padding: 0.2rem 1rem;\n          margin: 0;\n        }\n      `}\n    >\n      <div\n        css={css`\n          flex: 1;\n        `}\n      >\n        <div\n          css={css`\n            font-size: 1.6rem;\n            font-weight: bold;\n            margin-bottom: 1rem;\n            font-family: monospace;\n          `}\n        >\n          {name}\n        </div>\n        <div>{children}</div>\n      </div>\n      {onRemove && (\n        <button className=\"remove-button\" onClick={onRemove} title=\"Remove\">\n          ✕\n        </button>\n      )}\n    </div>\n  );\n};\n\nconst CharacterIcon: React.FC<{\n  charId: string | number;\n  color: string;\n  winner?: boolean;\n}> = ({ charId, color, winner }) => {\n  const src = getCharacterStockIcon(charId, color);\n  return (\n    <div\n      css={css`\n        position: relative;\n        display: inline-block;\n        margin-top: 0.5rem;\n        ${winner &&\n        `&::after {\n          position: absolute;\n          content: \" \";\n          height: 0.7rem;\n          width: 60%;\n          background-color: #ffa700;\n          left: 20%;\n          bottom: 110%;\n          clip-path: polygon(50% 0%, 75% 35%, 100% 0, 100% 100%, 0 100%, 0 0, 25% 35%);\n        }\n      `}\n      `}\n    >\n      <img src={src} style={{ height: \"3rem\" }} alt=\"stock icon\" />\n    </div>\n  );\n};\n\nexport interface FileItemProps {\n  file: ProcessedFile;\n  onRemove: () => void;\n}\n\nexport const FileItem: React.FC<FileItemProps> = (props) => {\n  const { file, onRemove } = props;\n  const { filename, loading, error, details } = file;\n  if (loading) {\n    return (\n      <BasicFileItem name={filename}>\n        <span\n          css={css`\n            font-weight: bold;\n          `}\n        >\n          LOADING...\n        </span>\n      </BasicFileItem>\n    );\n  }\n  if (error || !details) {\n    return (\n      <BasicFileItem onRemove={onRemove} name={filename}>\n        <ErrorMessage>{error.message}</ErrorMessage>\n      </BasicFileItem>\n    );\n  }\n\n  const stageName = stageUtil.getStageName(details.settings.stageId as number);\n  const players = details.settings.players;\n  const duration = details.latestFrame ? convertFrameCountToDurationString(details.latestFrame.frame) : \"N/A\";\n  const winnerIndex = details.latestFrame ? findWinner(details.latestFrame) : null;\n  const icons = players.map((player) => {\n    const winner = player.playerIndex === winnerIndex;\n    const charId = player.characterId as number;\n    const color = characterUtil.getCharacterColorName(charId, player.characterColor as number);\n    return <CharacterIcon key={`${player.port}-icon`} charId={charId} color={color} winner={winner} />;\n  });\n  return (\n    <BasicFileItem onRemove={onRemove} name={filename}>\n      <div\n        css={css`\n          display: grid;\n          justify-items: center;\n          align-items: center;\n          grid-template-columns: repeat(3, 1fr);\n          font-weight: bold;\n        `}\n      >\n        <div>{stageName}</div>\n        <div\n          css={css`\n            display: grid;\n            grid-auto-flow: column;\n            grid-column-gap: 1rem;\n          `}\n        >\n          {icons}\n        </div>\n        <div>{duration}</div>\n      </div>\n    </BasicFileItem>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport { ProcessedFile } from \"store/types\";\n\nimport { FileItem } from \"./FileItem\";\n\nexport interface FileListProps {\n  files: ProcessedFile[];\n  onRemove: (filename: string) => void;\n}\n\nexport const FileList: React.FC<FileListProps> = (props) => {\n  const { files, onRemove } = props;\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-template-columns: 100%;\n        grid-row-gap: 1rem;\n      `}\n    >\n      {files.map((f) => (\n        <FileItem key={f.filename} file={f} onRemove={() => onRemove(f.filename)} />\n      ))}\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { PrimaryButton, SecondaryButton } from \"components/Buttons\";\nimport { DropPad } from \"components/DropPad\";\nimport { ErrorMessage } from \"components/ErrorMessage\";\nimport { FileList } from \"components/FileList\";\nimport { readFileAsGameDetails } from \"lib/readFile\";\nimport { generateSearchParams } from \"lib/searchParams\";\nimport { generateStatParams } from \"lib/stats\";\nimport { GameDetails, Stat } from \"lib/stats/types\";\nimport React, { useCallback, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { AppContext, Types } from \"../store\";\nimport { StatOption, StatOptions } from \"./StatOptions\";\n\nconst STAT_OPTIONS_STORE_KEY = \"statOptions\";\n\nconst ALL_STATS: string[] = [\n  Stat.INPUTS_PER_MINUTE,\n  Stat.DAMAGE_PER_OPENING,\n  Stat.OPENINGS_PER_KILL,\n  Stat.DAMAGE_DONE,\n  Stat.AVG_KILL_PERCENT,\n  Stat.NEUTRAL_WINS,\n  Stat.L_CANCEL,\n  Stat.FIRST_BLOOD,\n  Stat.EARLY_KILLS,\n  Stat.LATE_DEATHS,\n  Stat.SELF_DESTRUCTS,\n  Stat.HIGH_DAMAGE_PUNISHES,\n];\n\nconst DEFAULT_STATS = [Stat.OPENINGS_PER_KILL, Stat.DAMAGE_DONE, Stat.AVG_KILL_PERCENT, Stat.NEUTRAL_WINS];\n\nconst getDefaultStats = (): StatOption[] => {\n  const current = DEFAULT_STATS.map((s) => ({\n    statId: s,\n    enabled: true,\n  }));\n  return validateStatOptions(current);\n};\n\nconst validateStatOptions = (current: StatOption[]): StatOption[] => {\n  const newItems: StatOption[] = ALL_STATS.filter(\n    (statId) => !current.find((option) => option.statId === statId)\n  ).map((statId) => ({ statId, enabled: false }));\n\n  // Make sure the ones we're showing are supported\n  const currentItems = current.filter((c) => ALL_STATS.includes(c.statId));\n  return [...currentItems, ...newItems];\n};\n\nconst generateStatsList = (options: StatOption[]): string[] => {\n  const statsList = options.filter((s) => s.enabled).map((s) => s.statId);\n  return [Stat.KILL_MOVES, Stat.NEUTRAL_OPENER_MOVES, \"\", ...statsList];\n};\n\nexport const FileListInput: React.FC<{ buttonColor: string }> = ({ buttonColor }) => {\n  const history = useHistory();\n  const { state, dispatch } = useContext(AppContext);\n  const [error, setError] = React.useState<any>(null);\n  const [showOptions, setShowOptions] = React.useState(false);\n\n  const clearAll = () => {\n    dispatch({\n      type: Types.CLEAR_ALL,\n    });\n  };\n\n  let defaultStats = getDefaultStats();\n  let statsModified = false;\n  // Since we're persisting user options in localStorage, we need to be able to\n  // handle the case where new options are available, yet not in their localStorage.\n  const restoredStatsString = localStorage.getItem(STAT_OPTIONS_STORE_KEY);\n  if (restoredStatsString) {\n    statsModified = restoredStatsString !== JSON.stringify(defaultStats);\n    defaultStats = validateStatOptions(JSON.parse(restoredStatsString));\n  }\n\n  const [statOptions, setStatOptions] = React.useState<StatOption[]>(defaultStats);\n\n  const onStatOptionReset = () => {\n    onStatOptionChange(getDefaultStats());\n  };\n\n  const onStatOptionChange = (options: StatOption[]) => {\n    localStorage.setItem(STAT_OPTIONS_STORE_KEY, JSON.stringify(options));\n    setStatOptions(options);\n  };\n\n  const onClick = () => {\n    try {\n      const gameDetails = state.files.filter((f) => f.details !== null).map((f) => f.details as GameDetails);\n      const params = generateStatParams(gameDetails, generateStatsList(statOptions));\n      const search = \"?\" + generateSearchParams(params).toString();\n      history.push({\n        pathname: \"/render\",\n        search,\n      });\n    } catch (err) {\n      console.error(error);\n      setError(err);\n    }\n  };\n\n  const onRemove = (filename: string) => {\n    dispatch({\n      type: Types.REMOVE_FILE,\n      payload: {\n        filename,\n      },\n    });\n  };\n\n  const onDrop = useCallback(\n    (acceptedFiles: File[]) => {\n      // Track how long processing takes\n      const startTime = new Date().getTime();\n\n      // First add all the files to the store\n      dispatch({\n        type: Types.ADD_FILES,\n        payload: {\n          files: acceptedFiles,\n        },\n      });\n\n      const promises = acceptedFiles.map(async (file) => {\n        try {\n          const details = await readFileAsGameDetails(file);\n          dispatch({\n            type: Types.SET_DETAILS,\n            payload: {\n              filename: file.name,\n              details,\n            },\n          });\n        } catch (err) {\n          console.error(error);\n          dispatch({\n            type: Types.SET_ERROR,\n            payload: {\n              filename: file.name,\n              error: err,\n            },\n          });\n        }\n      });\n\n      // Print the time taken when complete\n      Promise.all(promises).then(() => {\n        const time = new Date().getTime() - startTime;\n        console.log(`Finished processing in ${time}ms`);\n      });\n    },\n    [dispatch, error]\n  );\n\n  const finishedProcessing = !state.files.find((f) => f.loading);\n  const buttonText =\n    state.files.length === 0 ? \"NO FILES ADDED\" : finishedProcessing ? \"GENERATE STATS\" : \"PLEASE WAIT\";\n\n  if (showOptions) {\n    return (\n      <StatOptions\n        onClose={() => setShowOptions(false)}\n        value={statOptions}\n        onChange={onStatOptionChange}\n        onReset={onStatOptionReset}\n        hideReset={!statsModified}\n      />\n    );\n  }\n\n  return (\n    <div\n      css={css`\n        display: flex;\n        flex-direction: column;\n        flex-wrap: nowrap;\n        width: 100%;\n        height: 100%;\n      `}\n    >\n      <SecondaryButton align=\"right\" onClick={() => setShowOptions(true)}>\n        customize stats\n      </SecondaryButton>\n      <DropPad accept=\".slp\" onDrop={onDrop} />\n      <div\n        css={css`\n          overflow: auto;\n          display: flex;\n          flex-direction: column;\n          margin: 1rem 0;\n        `}\n      >\n        <FileList files={state.files} onRemove={onRemove} />\n      </div>\n      <div>\n        <PrimaryButton\n          backgroundColor={buttonColor}\n          color=\"white\"\n          disabled={state.files.length === 0 || !finishedProcessing}\n          onClick={onClick}\n        >\n          {buttonText}\n        </PrimaryButton>\n        {state.files.length > 0 && <SecondaryButton onClick={clearAll}>reset</SecondaryButton>}\n      </div>\n      {error && <ErrorMessage>{error.message}</ErrorMessage>}\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { ExternalLink as A } from \"components/ExternalLink\";\nimport { Header } from \"components/Header\";\nimport { FileListInput } from \"containers/FileListInput\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { hasOpacity } from \"styles/opacity\";\nimport { defaultTheme, GlobalTheme } from \"styles/theme\";\n\nconst linkStyle = css`\n  display: block;\n  text-align: center;\n  text-decoration: none;\n  color: ${defaultTheme.secondaryColor};\n  background: white;\n  padding: 1rem 0rem;\n  width: 100%;\n  font-weight: 700;\n  font-size: 2.3rem;\n  cursor: pointer;\n  ${hasOpacity(0.8)};\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  padding: 0 2rem;\n`;\n\nexport const MainView: React.FC = () => {\n  const primaryColor = localStorage.getItem(\"primaryColor\") || defaultTheme.primaryColor;\n  const secondaryColor = localStorage.getItem(\"secondaryColor\") || defaultTheme.secondaryColor;\n\n  return (\n    <div\n      css={css`\n        height: 100%;\n        width: 100%;\n        max-width: 80rem;\n        margin: 0 auto;\n      `}\n    >\n      <GlobalTheme primaryColor={primaryColor} secondaryColor={secondaryColor} />\n      <Container>\n        <div\n          css={css`\n            flex: none;\n          `}\n        >\n          <Header\n            css={css`\n              cursor: pointer;\n              font-size: 4rem;\n            `}\n          >\n            Slippi Stats\n            <br />\n            Graphic Generator\n          </Header>\n        </div>\n        <div\n          css={css`\n            flex: 1;\n            display: flex;\n            flex-direction: column;\n            overflow: auto;\n          `}\n        >\n          <FileListInput buttonColor={primaryColor} />\n        </div>\n        <div\n          css={css`\n            flex: none;\n            display: grid;\n            grid-template-columns: repeat(3, 1fr);\n            grid-column-gap: 1rem;\n            padding: 2rem 0;\n          `}\n        >\n          <Link css={linkStyle} to=\"/random\" title=\"Show random sample stats\">\n            DEMO\n          </Link>\n          <A css={linkStyle} title=\"Need help?\" href=\"https://github.com/vinceau/slippi-stats#faq\">\n            FAQ\n          </A>\n          <A css={linkStyle} title=\"Send love\" href=\"https://twitter.com/_vinceau\">\n            AUTHOR\n          </A>\n        </div>\n      </Container>\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport Copy from \"react-copy-to-clipboard\";\n\nexport interface CopyToClipboardProps {\n  text: string;\n  onCopyText?: string;\n  onCopyTimeoutMs?: number;\n}\n\nexport const CopyToClipboard: React.FC<CopyToClipboardProps> = (props) => {\n  const [copied, setCopied] = React.useState(false);\n  const timeoutMs = props.onCopyTimeoutMs ?? 2000;\n  const copyText = props.onCopyText || \"copied!\";\n\n  const onCopy = () => {\n    setCopied(true);\n    setTimeout(() => setCopied(false), timeoutMs);\n  };\n\n  if (copied) {\n    return <span>{copyText}</span>;\n  }\n\n  return (\n    <span\n      css={css`\n        cursor: pointer;\n        &:hover {\n          text-decoration: underline;\n        }\n      `}\n    >\n      <Copy text={props.text} onCopy={onCopy}>\n        {props.children}\n      </Copy>\n    </span>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\n\nimport obsImage from \"../styles/images/obs.png\";\n\ninterface OBSLayerOptions {\n  \"layer-name\": string;\n  \"layer-width\": number;\n  \"layer-height\": number;\n}\n\nfunction generateLink(options?: Partial<OBSLayerOptions>): string {\n  let location = window.location.href;\n  for (const [key, val] of Object.entries(options || {})) {\n    location += `&${key}=${val}`;\n  }\n  return location;\n}\n\nconst DraggableLink = styled.a`\n  color: #cccccc;\n  border: solid 0.2rem white;\n  background-color: #333333;\n  display: inline-block;\n  text-decoration: none;\n  padding: 1.5rem 3rem;\n  cursor: move;\n  border-radius: 0.3rem;\n  display: flex;\n  align-items: center;\n  text-transform: uppercase;\n  font-weight: bold;\n`;\n\nexport const OBSDragButton: React.FC<{ options?: Partial<OBSLayerOptions> }> = (props) => {\n  const wrapperRef = React.useRef(null);\n  const location = generateLink(props.options);\n  const pos = 30;\n  const handleDragStart = (e: any) => {\n    const img = new Image();\n    img.src = obsImage;\n    // Customize the visible 'thumbnail' while dragging\n    e.dataTransfer.setDragImage(img, pos, pos);\n    // Set the data type, and the value. You specifically want text/uri-list.\n    e.dataTransfer.setData(\"text/uri-list\", e.target.href);\n  };\n  const handleDragEnd = (e: any) => e.target.blur();\n  return (\n    <DraggableLink\n      href={location}\n      onDragStart={(e) => handleDragStart(e)}\n      onDragEnd={(e) => handleDragEnd(e)}\n      onClick={(e) => e.preventDefault()}\n      ref={wrapperRef}\n    >\n      <img style={{ width: \"3rem\", marginRight: \"1rem\" }} src={obsImage} alt=\"OBS Logo\" /> Drag me into OBS\n    </DraggableLink>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport function useParam(key: string, defaultValue = \"\") {\n  const [value, setValue] = useState<string>(defaultValue);\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const currentValue = params.get(key);\n    if (currentValue !== value) {\n      setValue(currentValue || defaultValue);\n    }\n  }, [key, defaultValue, location, value]);\n\n  const setParam = (val: string) => {\n    const params = new URLSearchParams(location.search);\n    params.set(key, val);\n    const search = \"?\" + params.toString();\n    history.push({\n      pathname: location.pathname,\n      search,\n    });\n  };\n\n  return [value, setParam] as const;\n}\n","// From: https://usehooks.com/useKeyPress/\n\nimport { useEffect, useState } from \"react\";\n\nexport function useKeyPress(targetKey: any) {\n  // State for keeping track of whether key is pressed\n\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  // Add event listeners\n\n  useEffect(() => {\n    // If pressed key is our target key then set to true\n\n    function downHandler({ key }: any) {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    }\n\n    // If released key is our target key then set to false\n\n    const upHandler = ({ key }: any) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    };\n\n    window.addEventListener(\"keydown\", downHandler);\n\n    window.addEventListener(\"keyup\", upHandler);\n\n    // Remove event listeners on cleanup\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [targetKey]); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n}\n","// From: https://usehooks.com/useOnClickOutside/\n\nimport { useEffect } from \"react\";\n\nexport function useOnClickOutside(ref: any, handler: any) {\n  useEffect(\n    () => {\n      const listener = (event: any) => {\n        // Do nothing if clicking ref's element or descendent elements\n\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener(\"mousedown\", listener);\n\n      document.addEventListener(\"touchstart\", listener);\n\n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n\n        document.removeEventListener(\"touchstart\", listener);\n      };\n    },\n\n    // Add ref and handler to effect dependencies\n\n    // It's worth noting that because passed in handler is a new\n    // function on every render that will cause this effect\n    // callback/cleanup to run every render. It's not a big deal\n    // but to optimize you can wrap handler in useCallback before\n    // passing it into this hook.\n\n    [ref, handler]\n  );\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { useOnClickOutside } from \"lib/hooks\";\nimport React, { useRef } from \"react\";\nimport { ChromePicker } from \"react-color\";\nimport { hasOpacity } from \"styles/opacity\";\n\nconst ColorSquare = styled.div<{\n  size: string;\n  color: string;\n}>`\n  cursor: pointer;\n  height: ${(p) => p.size};\n  width: ${(p) => p.size};\n  border-radius: 0.5rem;\n  border: solid 0.1rem rgba(255, 255, 255, 0.2);\n  background-color: ${(p) => p.color};\n`;\n\nconst ResetButton = styled.div`\n  position: absolute;\n  transform: translateX(-50%);\n  margin-top: 0.2rem;\n  margin-left: 50%;\n  font-size: 1.1rem;\n  cursor: pointer;\n  padding: 0.2rem 0.5rem;\n  ${hasOpacity(0.5)};\n`;\n\nexport const ColorPicker: React.FC<{\n  value: string;\n  defaultColor?: string;\n  onChange: (val: string) => void;\n}> = ({ value, onChange, defaultColor }) => {\n  const [show, setShow] = React.useState(false);\n  const wrapperRef = useRef(null);\n  const showReset = defaultColor && value !== defaultColor;\n\n  useOnClickOutside(wrapperRef, () => {\n    if (show) {\n      setShow(false);\n    }\n  });\n\n  const onClick = () => {\n    if (!show) {\n      setShow(true);\n    }\n  };\n\n  const resetClick = () => {\n    if (defaultColor) {\n      onChange(defaultColor);\n    }\n  };\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      <ColorSquare color={value} size=\"5rem\" ref={wrapperRef} onClick={onClick}>\n        {show && (\n          <div\n            css={css`\n              position: absolute;\n              z-index: 9999;\n              bottom: 0;\n            `}\n          >\n            <ChromePicker color={value} onChange={(color) => onChange(color.hex)} />\n          </div>\n        )}\n      </ColorSquare>\n      {showReset && <ResetButton onClick={resetClick}>RESET</ResetButton>}\n    </div>\n  );\n};\n","/** @jsx jsx */ import { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { ColorPicker } from \"components/ColorPicker\";\nimport React from \"react\";\n\nconst ColorContainer = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  grid-gap: 1rem;\n  justify-items: center;\n  align-items: center;\n`;\n\nconst ColorLabel = styled.div`\n  font-weight: 600;\n  font-size: 1.6rem;\n`;\n\nexport interface DualColorPickerProps {\n  leftLabel: string;\n  rightLabel: string;\n  leftColor: string;\n  rightColor: string;\n  defaultLeftColor?: string;\n  defaultRightColor?: string;\n  onLeftColorChange: (color: string) => void;\n  onRightColorChange: (color: string) => void;\n}\n\nexport const DualColorPicker: React.FC<DualColorPickerProps> = (props) => {\n  const {\n    defaultLeftColor,\n    defaultRightColor,\n    leftLabel,\n    rightLabel,\n    leftColor,\n    rightColor,\n    onLeftColorChange,\n    onRightColorChange,\n  } = props;\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-column-gap: 2.5rem;\n        grid-template-columns: repeat(2, 1fr);\n      `}\n    >\n      <ColorContainer\n        css={css`\n          justify-self: end;\n        `}\n      >\n        <ColorLabel>{leftLabel}</ColorLabel>\n        <div>\n          <ColorPicker value={leftColor} onChange={onLeftColorChange} defaultColor={defaultLeftColor} />\n        </div>\n      </ColorContainer>\n      <ColorContainer\n        css={css`\n          justify-self: start;\n        `}\n      >\n        <div>\n          <ColorPicker value={rightColor} onChange={onRightColorChange} defaultColor={defaultRightColor} />\n        </div>\n        <ColorLabel>{rightLabel}</ColorLabel>\n      </ColorContainer>\n    </div>\n  );\n};\n","/** @jsx jsx */ import { css, jsx } from \"@emotion/core\";\nimport { DualColorPicker } from \"components/ColorPicker\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nexport interface DualColorPanelProps {\n  panelLabel: string;\n  leftLabel: string;\n  leftColorParam: string;\n  leftDefault: string;\n  rightLabel: string;\n  rightColorParam: string;\n  rightDefault: string;\n}\n\nexport const DualColorPanel: React.FC<DualColorPanelProps> = (props) => {\n  const { panelLabel, leftLabel, leftColorParam, leftDefault, rightLabel, rightColorParam, rightDefault } = props;\n  const existingLeftColor = localStorage.getItem(leftColorParam);\n  const existingRightColor = localStorage.getItem(rightColorParam);\n  const [leftColor, setLeftColor] = useParam(leftColorParam, existingLeftColor || leftDefault);\n  const [rightColor, setRightColor] = useParam(rightColorParam, existingRightColor || rightDefault);\n\n  const onLeftColorChange = (color: string) => {\n    localStorage.setItem(leftColorParam, color);\n    setLeftColor(color);\n  };\n\n  const onRightColorChange = (color: string) => {\n    localStorage.setItem(rightColorParam, color);\n    setRightColor(color);\n  };\n\n  return (\n    <Panel title={panelLabel}>\n      <DualColorPicker\n        leftLabel={leftLabel}\n        rightLabel={rightLabel}\n        leftColor={leftColor}\n        rightColor={rightColor}\n        defaultLeftColor={leftDefault}\n        defaultRightColor={rightDefault}\n        onLeftColorChange={onLeftColorChange}\n        onRightColorChange={onRightColorChange}\n      />\n    </Panel>\n  );\n};\n\nconst Panel: React.FC<{ title: string }> = (props) => {\n  return (\n    <div>\n      <div\n        css={css`\n          text-align: center;\n          margin-bottom: 2rem;\n          font-weight: 800;\n          font-size: 2rem;\n        `}\n      >\n        {props.title}\n      </div>\n      {props.children}\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { characters as characterUtil } from \"@slippi/slippi-js\";\nimport { CopyToClipboard } from \"components/CopyToClipboard\";\nimport { ExternalLink as A } from \"components/ExternalLink\";\nimport { OBSDragButton } from \"components/OBSDragButton\";\nimport { useOnClickOutside, useParam } from \"lib/hooks\";\nimport { PortColor } from \"lib/portColor\";\nimport React from \"react\";\nimport { hasOpacity } from \"styles/opacity\";\nimport { defaultTheme } from \"styles/theme\";\n\nimport { DualColorPanel } from \"./Panel\";\n\nconst Content = styled.div`\n  padding-top: 2rem;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n`;\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Heading = styled.h2`\n  display: block;\n  position: absolute;\n  width: 100%;\n  top: 0;\n  transform: translateY(-100%);\n  background-color: inherit;\n  margin: 0;\n  text-align: center;\n  padding: 1rem 0;\n  font-size: 2rem;\n  &::after {\n    content: \"\";\n    display: block;\n    background-image: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.2), transparent);\n    height: 0.1rem;\n    position: absolute;\n    width: 80%;\n    margin-left: 10%;\n    bottom: 0;\n  }\n`;\n\nconst Outer = styled.div`\n  position: fixed;\n  top: 100%;\n  left: 0;\n  width: 100%;\n  background-color: black;\n  opacity: 0.5;\n  z-index: 10;\n  &.closed:hover {\n    cursor: pointer;\n    opacity: 0.8;\n  }\n  &.open {\n    opacity: 1;\n    transform: translateY(-100%);\n    .close-button {\n      opacity: 1;\n    }\n  }\n  transition: all 0.2s ease-in-out;\n  .close-button {\n    z-index: 10;\n    position: absolute;\n    right: 3rem;\n    top: 1rem;\n    opacity: 0;\n    transition: opacity 0.2s ease-in-out;\n    color: black;\n    background-color: white;\n    padding: 0.2rem 1rem;\n    font-weight: bold;\n    font-size: 2.5rem;\n    cursor: pointer;\n    transform: translateY(-100%);\n  }\n`;\n\nexport const Options: React.FC = () => {\n  const [open, setOpen] = React.useState(false);\n  const [char1] = useParam(\"char1\");\n  const [char2] = useParam(\"char2\");\n\n  const charName1 = characterUtil.getCharacterShortName(+char1);\n  const charName2 = characterUtil.getCharacterShortName(+char2);\n  const obsLayerName = `Slippi Stats - ${charName1} v ${charName2}`;\n\n  const outerRef = React.useRef(null);\n\n  useOnClickOutside(outerRef, () => {\n    if (open) {\n      setOpen(false);\n    }\n  });\n\n  const showOptions = () => {\n    if (!open) {\n      setOpen(true);\n    }\n  };\n\n  const closeOptions = () => setOpen(false);\n\n  return (\n    <Outer className={open ? \"open\" : \"closed\"} ref={outerRef} onClick={showOptions}>\n      <div className=\"close-button\" onClick={closeOptions} title=\"Close\">\n        ✕\n      </div>\n      <Heading>OPTIONS</Heading>\n      <Content>\n        <Column>\n          <DualColorPanel\n            panelLabel=\"PLAYER COLOR\"\n            leftLabel=\"LEFT\"\n            rightLabel=\"RIGHT\"\n            leftDefault={PortColor.P1}\n            leftColorParam=\"leftColor\"\n            rightColorParam=\"rightColor\"\n            rightDefault={PortColor.P2}\n          />\n        </Column>\n        <Column>\n          <div\n            css={css`\n              margin-top: 1rem;\n            `}\n          >\n            <OBSDragButton options={{ \"layer-name\": obsLayerName, \"layer-width\": 1920, \"layer-height\": 1080 }} />\n            <div\n              css={css`\n                margin-top: 0.5rem;\n                text-align: center;\n                font-size: 1.2rem;\n                ${hasOpacity(0.5)};\n              `}\n            >\n              <CopyToClipboard text={window.location.href}>\n                <span>copy link to clipboard</span>\n              </CopyToClipboard>\n            </div>\n          </div>\n          <div\n            css={css`\n              font-size: 1.5rem;\n              margin: 2rem 0;\n              ${hasOpacity(0.5)}\n              a:hover {\n                text-decoration: underline;\n              }\n            `}\n          >\n            Made with love by <A href=\"https://twitter.com/_vinceau\">Vince Au</A>\n          </div>\n        </Column>\n        <Column>\n          <DualColorPanel\n            panelLabel=\"THEME COLOR\"\n            leftLabel=\"PRIMARY\"\n            rightLabel=\"SECONDARY\"\n            leftDefault={defaultTheme.primaryColor}\n            leftColorParam=\"primaryColor\"\n            rightColorParam=\"secondaryColor\"\n            rightDefault={defaultTheme.secondaryColor}\n          />\n        </Column>\n      </Content>\n    </Outer>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { Character } from \"@slippi/slippi-js\";\nimport { useParam } from \"lib/hooks\";\nimport { getCharacterVSScreen, Side } from \"lib/resources\";\nimport React from \"react\";\n\nexport interface CharDisplayProps {\n  colorParam: string;\n  charParam: string;\n  align: Side;\n  theme: string;\n}\n\n// Some characters have their faces to the right so it gets cut off.\n// Adjust the alignment so you can properly see their faces.\nconst RIGHT_CHAR_ALIGNMENT = new Map<Character, string>();\nRIGHT_CHAR_ALIGNMENT.set(Character.BOWSER, \"right top\");\nRIGHT_CHAR_ALIGNMENT.set(Character.SHEIK, \"right top\");\nRIGHT_CHAR_ALIGNMENT.set(Character.ROY, \"left 80%\");\n\nfunction getAlignment(facing: Side, char: string, defaultAlignment: string): string {\n  // We only care custom alignments for the right hand side of the VS-screen\n  if (facing === \"right\") {\n    const customCharAlign = RIGHT_CHAR_ALIGNMENT.get(+char);\n    if (customCharAlign) {\n      return customCharAlign;\n    }\n  }\n\n  return defaultAlignment;\n}\n\nexport const CharDisplay: React.FC<CharDisplayProps> = (props) => {\n  const { colorParam, charParam, align, theme } = props;\n  const [color] = useParam(colorParam);\n  const [char] = useParam(charParam);\n  const facing: Side = align === \"left\" ? \"right\" : \"left\";\n  const imgSrc = getCharacterVSScreen(facing, char, color);\n  const alignment = getAlignment(facing, char, `${align} top`);\n  return (\n    <div\n      css={css`\n        height: 80%;\n        width: 100%;\n        position: relative;\n        background: radial-gradient(circle at center -30%, ${theme}, transparent);\n        &::after {\n          content: ' ';\n          position: absolute;\n          height: 100%;\n          width: 100%;\n          background-image: url(\"${imgSrc}\");\n          background-repeat: no-repeat;\n          background-size: cover;\n          background-position: ${alignment};\n        }\n      `}\n    ></div>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const Block = styled.div<{\n  color: string;\n  backgroundColor: string;\n}>`\n  color: ${(p) => p.color};\n  background-color: ${(p) => p.backgroundColor};\n  text-align: center;\n  padding: 0.3em 0;\n  font-size: 1.2em;\n  box-shadow: 0.2em 0.2em 0.2em black;\n`;\n","// From: https://dev.to/joelmturner/build-an-inline-edit-text-input-with-react-hooks-4nah\n\nimport \"./index.scss\";\n\nimport { useKeyPress, useOnClickOutside } from \"lib/hooks\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nexport interface InlineEditProps {\n  text: string;\n  textAlign?: \"left\" | \"right\";\n  onSetText: (text: string) => void;\n  onBlur?: () => void;\n  onFocus?: () => void;\n  placeholder?: string;\n}\n\nexport const InlineEdit: React.FC<InlineEditProps> = (props) => {\n  const { text, onSetText, textAlign, placeholder } = props;\n  const [isInputActive, _setIsInputActive] = useState(false);\n  const [inputValue, setInputValue] = useState(text);\n\n  const setIsInputActive = React.useCallback(\n    (isActive: boolean) => {\n      if (isActive !== isInputActive) {\n        // Value has changed\n        if (isActive && props.onFocus) {\n          props.onFocus();\n        }\n\n        if (!isActive && props.onBlur) {\n          props.onBlur();\n        }\n      }\n      _setIsInputActive(isActive);\n    },\n    [isInputActive, props]\n  );\n\n  const wrapperRef = useRef(null);\n  const textRef = useRef(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const tab = useKeyPress(\"Tab\");\n  const enter = useKeyPress(\"Enter\");\n  const esc = useKeyPress(\"Escape\");\n\n  useEffect(() => {\n    setInputValue(text);\n  }, [text]);\n\n  // check to see if the user clicked outside of this component\n  useOnClickOutside(wrapperRef, () => {\n    if (isInputActive) {\n      onSetText(inputValue);\n      setIsInputActive(false);\n    }\n  });\n\n  // focus the cursor in the input field on edit start\n  useEffect(() => {\n    if (isInputActive && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isInputActive]);\n\n  useEffect(() => {\n    if (isInputActive) {\n      // if Enter or tab is pressed, save the text and case the editor\n      if (enter || tab) {\n        onSetText(inputValue);\n        setIsInputActive(false);\n      }\n      // if Escape is pressed, revert the text and close the editor\n      if (esc) {\n        setInputValue(props.text);\n        setIsInputActive(false);\n      }\n    }\n  }, [tab, enter, esc, isInputActive, onSetText, setIsInputActive, inputValue, props.text]); // watch for key presses\n\n  return (\n    <span className=\"inline-text\" ref={wrapperRef}>\n      <span\n        ref={textRef}\n        onClick={() => setIsInputActive(true)}\n        className={`inline-text_copy inline-text_copy--${!isInputActive ? \"active\" : \"hidden\"}`}\n      >\n        {props.text || placeholder}\n      </span>\n      <input\n        ref={inputRef}\n        style={{ textAlign, maxWidth: \"100%\" }}\n        value={inputValue}\n        onChange={(e) => {\n          setInputValue(e.target.value);\n        }}\n        className={`inline-text_input inline-text_input--${isInputActive ? \"active\" : \"hidden\"}`}\n      />\n    </span>\n  );\n};\n\nInlineEdit.defaultProps = {\n  text: \"\",\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onSetText: () => {},\n};\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { hasOpacity } from \"styles/opacity\";\n\nimport { InlineEdit } from \"../InlineEdit\";\nimport { Block } from \"./Block\";\n\nexport interface EditBlockProps {\n  color: string;\n  backgroundColor: string;\n  value: string;\n  placeholder?: string;\n  onEdit: (val: string) => void;\n}\n\nexport const EditBlock: React.FC<EditBlockProps> = ({ onEdit, backgroundColor, value, color }) => {\n  return (\n    <Block color={color} backgroundColor={backgroundColor}>\n      <InlineEdit text={value} onSetText={onEdit} />\n    </Block>\n  );\n};\n\nconst OptionalBlock = styled(Block)<{\n  show?: boolean;\n}>`\n  ${(p) => hasOpacity(p.show ? 1 : 0)};\n  position: relative;\n  &:hover {\n    z-index: 10;\n  }\n`;\n\nexport const OptionalEditBlock: React.FC<EditBlockProps> = ({ onEdit, backgroundColor, value, color, placeholder }) => {\n  const [focused, setFocused] = React.useState(false);\n  const show = focused || Boolean(value);\n  return (\n    <OptionalBlock show={show} color={color} backgroundColor={backgroundColor}>\n      <InlineEdit\n        text={value}\n        onSetText={onEdit}\n        onFocus={() => setFocused(true)}\n        onBlur={() => setFocused(false)}\n        placeholder={placeholder}\n      />\n    </OptionalBlock>\n  );\n};\n\nOptionalEditBlock.defaultProps = {\n  placeholder: \"click to edit\",\n};\n","import styled from \"@emotion/styled\";\nimport { OptionalEditBlock } from \"components/Block\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nconst Name = styled.div`\n  font-size: 150%;\n  font-weight: 800;\n`;\n\nconst Subtitle = styled.div<{\n  show?: boolean;\n}>`\n  margin-top: -0.3rem;\n  margin-left: auto;\n  margin-right: auto;\n  width: 80%;\n  font-weight: 600;\n`;\n\nexport interface NameBlockProps {\n  nameParam: string;\n  subtitleParam: string;\n  primaryColor: string;\n}\n\nexport const NameBlock: React.FC<NameBlockProps> = ({ nameParam, subtitleParam, primaryColor }) => {\n  const [name, setName] = useParam(nameParam);\n  const [sub, setSub] = useParam(subtitleParam);\n  return (\n    <div>\n      <Name>\n        <OptionalEditBlock value={name} onEdit={setName} color=\"white\" backgroundColor={primaryColor} />\n      </Name>\n      <Subtitle>\n        <OptionalEditBlock value={sub} onEdit={setSub} color=\"black\" backgroundColor=\"white\" />\n      </Subtitle>\n    </div>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport { getCharacterPortrait } from \"lib/resources\";\nimport React from \"react\";\n\nconst Outer = styled.div<{\n  borderColor: string;\n  onClick?: () => void;\n}>`\n  position: relative;\n  display: block;\n  border: solid 0.1rem ${(p) => p.borderColor};\n  height: 5rem;\n  width: 100%;\n  max-width: 10rem;\n  ${(p) => (p.onClick ? \"cursor: pointer;\" : \"\")}\n`;\n\nconst BaseHeadImage = styled.div`\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  &::after {\n    content: \" \";\n    height: 100%;\n    background-repeat: no-repeat;\n    background-size: cover;\n    position: absolute;\n  }\n`;\n\nconst HeadImage = styled(BaseHeadImage)<{\n  backgroundColor?: string;\n  imageSrc: string;\n  side: \"left\" | \"right\";\n  waypoint: number;\n  dim?: boolean;\n}>`\n  ${(p) => {\n    const invWaypoint = 100 - p.waypoint;\n    return `\n      ${p.side === \"right\" ? `clip-path: polygon(${p.waypoint}% 0, 100% 0, 100% 100%, ${invWaypoint}% 100%);` : \"\"}\n      ${p.dim ? \"filter: brightness(25%);\" : \"\"}\n      ${p.backgroundColor ? `background: radial-gradient(circle at center -30%, ${p.backgroundColor}, black);` : \"\"}\n      &::after {\n        width: ${p.waypoint}%;\n        background-image: url(\"${p.imageSrc}\");\n        background-position: top ${p.side};\n        ${p.side === \"right\" ? `left: ${invWaypoint}%;` : \"transform: scaleX(-1);\"}\n      }\n    `;\n  }}\n`;\n\nexport interface HeadToHeadProps {\n  char1: number | string;\n  color1: string;\n  result1: string;\n  char2: number | string;\n  color2: string;\n  result2: string;\n  leftColor: string;\n  rightColor: string;\n  borderColor?: string;\n  onClick?: () => void;\n}\n\nexport const HeadToHead: React.FC<HeadToHeadProps> = ({\n  char1,\n  color1,\n  result1,\n  char2,\n  color2,\n  result2,\n  leftColor,\n  rightColor,\n  borderColor,\n  onClick,\n}) => {\n  const waypoint = 55;\n  const p1 = getCharacterPortrait(char1, color1);\n  const p2 = getCharacterPortrait(char2, color2);\n\n  const clickHandler = () => {\n    if (onClick) {\n      onClick();\n    }\n  };\n\n  return (\n    <Outer borderColor={borderColor || \"transparent\"} onClick={clickHandler}>\n      <HeadImage backgroundColor={leftColor} imageSrc={p1} waypoint={waypoint} side=\"left\" dim={result1 === \"loser\"} />\n      <HeadImage\n        backgroundColor={rightColor}\n        imageSrc={p2}\n        waypoint={waypoint}\n        side=\"right\"\n        dim={result2 === \"loser\"}\n      />\n    </Outer>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport { getStageIcon } from \"lib/resources\";\nimport React from \"react\";\n\nconst Text = styled.span`\n  font-size: 2.5rem;\n  font-weight: bold;\n  opacity: 0.85;\n  text-shadow: 2px 2px 2px black;\n`;\n\nconst Outer = styled.div<{\n  image: string;\n  borderColor: string;\n}>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  height: 9rem;\n  width: 100%;\n  border: solid 1px ${(p) => p.borderColor};\n  z-index: 0;\n\n  &::after {\n    content: ' ';\n    height: 100%;\n    width: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-image: url(\"${(p) => p.image}\");\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-position: center;\n    filter: brightness(35%);\n    z-index: -1;\n  }\n`;\n\ninterface StageTimerProps {\n  stageId: string | number;\n  duration: string;\n  borderColor?: string;\n}\n\nexport const StageTimer: React.FC<StageTimerProps> = ({ stageId, duration, borderColor }) => {\n  const stageIcon = getStageIcon(stageId);\n  return (\n    <Outer image={stageIcon} borderColor={borderColor || \"transparent\"}>\n      <Text>{duration}</Text>\n    </Outer>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { HeadToHead } from \"components/HeadToHead\";\nimport { StageTimer } from \"components/StageTimer\";\nimport { GameInfo } from \"lib/hooks\";\nimport React from \"react\";\n\nexport interface GameResultProps {\n  gameInfo: GameInfo | null;\n  onGameInfoChange: (info: Partial<GameInfo>) => void;\n  leftColor: string;\n  rightColor: string;\n  winningSide?: string;\n}\n\nconst switchResult = (res: string): string => {\n  return res === \"winner\" ? \"loser\" : res === \"loser\" ? \"winner\" : res;\n};\n\nexport const GameResult: React.FC<GameResultProps> = (props) => {\n  const { gameInfo, onGameInfoChange } = props;\n  if (!gameInfo) {\n    return null;\n  }\n\n  const gameWinner = gameInfo.result1 === \"winner\" ? \"left\" : gameInfo.result2 === \"winner\" ? \"right\" : \"\";\n  const highlight = props.winningSide === gameWinner;\n\n  const { stageId, duration, ...rest } = gameInfo;\n  const borderColor = `rgba(255, 255, 255, ${highlight ? 1 : 0.2})`;\n\n  const onClick = () => {\n    onGameInfoChange({\n      result1: switchResult(gameInfo.result1),\n      result2: switchResult(gameInfo.result2),\n    });\n  };\n\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-template-columns: 100%;\n        justify-items: center;\n        width: 100%;\n        max-width: 18rem;\n        grid-row-gap: 2rem;\n      `}\n    >\n      <HeadToHead\n        onClick={onClick}\n        leftColor={props.leftColor}\n        rightColor={props.rightColor}\n        borderColor={borderColor}\n        {...rest}\n      />\n      <StageTimer stageId={stageId} duration={duration} borderColor={borderColor} />\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { GameInfo } from \"lib/hooks\";\nimport React from \"react\";\n\nimport { GameResult } from \"./GameResult\";\n\nexport const GameDisplay: React.FC<{\n  games: Array<GameInfo | null>;\n  updateGameInfo: (gameNumber: number, gameInfo: Partial<GameInfo>) => void;\n  leftColor: string;\n  rightColor: string;\n  winningSide?: string;\n}> = (props) => {\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-column-gap: 2rem;\n        grid-template-columns: repeat(${props.games.length}, 1fr);\n        justify-items: center;\n      `}\n    >\n      {props.games.map((game, i) => (\n        <GameResult\n          key={`game${i}`}\n          gameInfo={game}\n          onGameInfoChange={(info) => props.updateGameInfo(i + 1, info)}\n          leftColor={props.leftColor}\n          rightColor={props.rightColor}\n          winningSide={props.winningSide}\n        />\n      ))}\n    </div>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const Divider = styled.div`\n  content: \" \";\n  display: block;\n  height: 0.1rem;\n  width: 100%;\n  margin-top: 0.7rem;\n  background-color: rgba(255, 255, 255, 0.05);\n`;\n","import styled from \"@emotion/styled\";\nimport { hasOpacity } from \"styles/opacity\";\n\nexport const StatDisplayItem = styled.div<{\n  hasItem: boolean;\n  isDragging?: boolean;\n  isDraggingOver?: boolean;\n}>`\n  padding: 1rem 0;\n  user-select: none;\n  .remove {\n    display: none;\n    position: absolute;\n    top: -20%;\n    right: 20%;\n    padding: 0.5rem 1.5rem;\n    color: black;\n    background-color: white;\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n    font-weight: 600;\n    transition: all 0.2s ease-in-out;\n    cursor: pointer;\n    ${hasOpacity(0.4, 0.8)}\n  }\n  ${(p) =>\n    !p.hasItem || p.isDraggingOver\n      ? \"\"\n      : `\n  &:hover {\n    .remove {\n      display: block;\n    }\n  };\n  `}\n`;\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\n\nimport { Block } from \"./Block\";\n\nexport interface StatProps {\n  label: string;\n  color: string;\n  backgroundColor: string;\n  leftComponent: React.ReactNode;\n  rightComponent: React.ReactNode;\n}\n\nconst StatLabel = styled(Block)`\n  padding: 0.3em 2.5em;\n  font-weight: 700;\n  font-size: 1.2em;\n  justify-self: center;\n`;\n\nconst StatContent = styled.div`\n  width: 100%;\n  font-weight: 800;\n  font-size: 2.3em;\n`;\n\nconst TextContent = styled(StatContent)`\n  font-size: 1.4em;\n`;\n\nconst OuterStat = styled.div`\n  display: grid;\n  grid-template-columns: 20% 60% 20%;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  &::before {\n    z-index: -1;\n    content: \"\";\n    display: block;\n    background-image: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.4), transparent);\n    height: 0.1rem;\n    position: absolute;\n    width: 80%;\n    margin-left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nconst Stat: React.FC<StatProps & Record<string, any>> = (props) => {\n  const { label, backgroundColor, color, leftComponent, rightComponent, children, ...rest } = props;\n  return (\n    <OuterStat>\n      <div\n        css={css`\n          width: 100%;\n          justify-self: start;\n        `}\n      >\n        {leftComponent}\n      </div>\n      <StatLabel backgroundColor={backgroundColor} color={color} {...rest}>\n        {label}\n      </StatLabel>\n      <div\n        css={css`\n          width: 100%;\n          justify-self: end;\n          text-align: right;\n        `}\n      >\n        {rightComponent}\n      </div>\n    </OuterStat>\n  );\n};\n\nStat.defaultProps = {\n  color: \"black\",\n  backgroundColor: \"white\",\n};\n\nexport const NumberStat: React.FC<StatProps> = (props) => {\n  const { leftComponent, rightComponent, ...rest } = props;\n  return (\n    <Stat\n      leftComponent={<StatContent>{leftComponent}</StatContent>}\n      rightComponent={<StatContent>{rightComponent}</StatContent>}\n      {...rest}\n    />\n  );\n};\n\nexport const TextStat: React.FC<StatProps> = (props) => {\n  const { leftComponent, rightComponent, ...rest } = props;\n  return (\n    <Stat\n      leftComponent={<TextContent>{leftComponent}</TextContent>}\n      rightComponent={<TextContent>{rightComponent}</TextContent>}\n      {...rest}\n    />\n  );\n};\n","import { InlineEdit } from \"components/InlineEdit\";\nimport { NumberStat, TextStat } from \"components/Stat\";\nimport { useParam } from \"lib/hooks\";\nimport { STAT_DEFINITIONS } from \"lib/stats\";\nimport React from \"react\";\nimport { Theme } from \"styles/theme\";\n\ninterface ConnectedStatProps {\n  param1: string;\n  param2: string;\n  label: string;\n}\n\nconst ConnectedNumberStat: React.FC<ConnectedStatProps & Record<string, any>> = (props) => {\n  const { param1, param2, label, children, ...rest } = props;\n  const defaultValue = \"0\";\n  const [field1, setField1] = useParam(param1, defaultValue);\n  const [field2, setField2] = useParam(param2, defaultValue);\n  return (\n    <NumberStat\n      label={label}\n      color=\"black\"\n      backgroundColor=\"white\"\n      leftComponent={<InlineEdit text={field1} onSetText={setField1} />}\n      rightComponent={<InlineEdit text={field2} textAlign=\"right\" onSetText={setField2} />}\n      {...rest}\n    />\n  );\n};\n\nconst ConnectedTextStat: React.FC<ConnectedStatProps & Theme & Record<string, any>> = (props) => {\n  const { param1, param2, label, primaryColor, children, ...rest } = props;\n  const defaultValue = \"-\";\n  const [field1, setField1] = useParam(param1, defaultValue);\n  const [field2, setField2] = useParam(param2, defaultValue);\n  return (\n    <TextStat\n      label={label}\n      color=\"white\"\n      backgroundColor={primaryColor}\n      leftComponent={<InlineEdit text={field1} onSetText={setField1} />}\n      rightComponent={<InlineEdit text={field2} textAlign=\"right\" onSetText={setField2} />}\n      {...rest}\n    />\n  );\n};\n\nexport const Statistic: React.FC<\n  {\n    theme: Theme;\n    statId: string;\n  } & Record<string, any>\n> = (props) => {\n  const { statId, theme, children, ...rest } = props;\n  const statInfo = STAT_DEFINITIONS.get(statId);\n  if (!statInfo) {\n    return null;\n  }\n\n  const { name, type } = statInfo;\n  const label = (name as string).toUpperCase();\n  if (type === \"number\") {\n    return <ConnectedNumberStat param1={`${statId}1`} param2={`${statId}2`} label={label} {...rest} />;\n  } else if (type === \"text\") {\n    return <ConnectedTextStat param1={`${statId}1`} param2={`${statId}2`} label={label} {...theme} {...rest} />;\n  }\n\n  return null;\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { reorder } from \"lib/util\";\nimport React from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { Theme } from \"styles/theme\";\n\nimport { Divider } from \"./Divider\";\nimport { StatDisplayItem } from \"./StatDisplayItem\";\nimport { Statistic } from \"./Statistic\";\n\ninterface StatDisplayListProps {\n  theme: Theme;\n  stats: string;\n  setStats: (s: string) => void;\n}\n\nexport const StatDisplayList: React.FC<StatDisplayListProps> = (props) => {\n  const { theme, stats, setStats } = props;\n  const [items, setItems] = React.useState<string[]>(stats.split(\",\"));\n  React.useEffect(() => {\n    setItems(stats.split(\",\"));\n  }, [stats]);\n\n  const updateStats = (statIds: string[]) => {\n    // First update the local state\n    setItems(statIds);\n    // Then update the URL state\n    setStats(statIds.join(\",\"));\n  };\n\n  const onDragEnd = (result: any) => {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n    const newItems = reorder(items, result.source.index, result.destination.index);\n    updateStats(newItems);\n  };\n\n  const onRemove = (statId: string) => {\n    const newItems = items.filter((s) => s !== statId);\n    updateStats(newItems);\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"droppable\">\n        {(dropProvided, dropSnapshot) => (\n          <div\n            {...dropProvided.droppableProps}\n            ref={dropProvided.innerRef}\n            css={css`\n              margin: -1rem 0;\n            `}\n          >\n            {items.map((item, index) => {\n              const key = item ? item : \"divider\";\n              return (\n                <Draggable key={key} draggableId={key} index={index}>\n                  {(dragProvided, dragSnapshot) => {\n                    const additionalStyles = item ? null : dragProvided.dragHandleProps;\n                    return (\n                      <StatDisplayItem\n                        ref={dragProvided.innerRef}\n                        hasItem={Boolean(item)}\n                        isDraggingOver={dropSnapshot.isDraggingOver}\n                        {...dragProvided.draggableProps}\n                        {...additionalStyles}\n                        style={dragProvided.draggableProps.style}\n                      >\n                        {item ? (\n                          <div\n                            css={css`\n                              position: relative;\n                            `}\n                          >\n                            <Statistic statId={item} theme={theme} {...dragProvided.dragHandleProps} />\n                            <div className=\"remove\" onClick={() => onRemove(item)}>\n                              ✕\n                              <span\n                                css={css`\n                                  margin-left: 1rem;\n                                `}\n                              >\n                                REMOVE\n                              </span>\n                            </div>\n                          </div>\n                        ) : (\n                          <Divider />\n                        )}\n                      </StatDisplayItem>\n                    );\n                  }}\n                </Draggable>\n              );\n            })}\n            {dropProvided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { Block } from \"components/Block\";\nimport { GameDisplay } from \"components/GameDisplay\";\nimport { useGames, useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nimport { Divider } from \"./Divider\";\nimport { StatDisplayList } from \"./StatDisplayList\";\n\nconst ScoreBlock = styled(Block)`\n  padding: 0.5rem 4rem;\n  font-size: 5rem;\n  font-weight: 800;\n  position: absolute;\n  bottom: -6rem;\n  left: 50%;\n  transform: translateX(-50%);\n`;\n\nexport const StatDisplay: React.FC<{\n  primaryColor: string;\n  secondaryColor: string;\n  leftColor: string;\n  rightColor: string;\n}> = (props) => {\n  const { games, score, setGame } = useGames();\n  const [stats, setStats] = useParam(\"stats\");\n  const winningSide = score.left > score.right ? \"left\" : score.right > score.left ? \"right\" : \"\";\n  const { leftColor, rightColor, ...theme } = props;\n\n  return (\n    <div\n      css={css`\n        background: linear-gradient(to right, ${props.secondaryColor}, transparent, ${props.secondaryColor});\n        width: 100%;\n      `}\n    >\n      <div\n        css={css`\n          display: grid;\n          grid-template-columns: 100%;\n          grid-row-gap: 2rem;\n          margin: 4rem;\n        `}\n      >\n        <StatDisplayList stats={stats} setStats={setStats} theme={theme} />\n        <Divider />\n        <GameDisplay\n          games={games}\n          updateGameInfo={setGame}\n          winningSide={winningSide}\n          leftColor={leftColor}\n          rightColor={rightColor}\n        />\n      </div>\n      <ScoreBlock color=\"white\" backgroundColor={props.primaryColor}>\n        {`${score.left} - ${score.right}`}\n      </ScoreBlock>\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport interface GameInfo {\n  stageId: string;\n  duration: string;\n  char1: string;\n  color1: string;\n  result1: string;\n  char2: string;\n  color2: string;\n  result2: string;\n}\n\nexport function useGames() {\n  const [games, setGames] = useState<Array<GameInfo | null>>([]);\n  const [score, setScore] = useState<{ left: number; right: number }>({ left: 0, right: 0 });\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const gt = params.get(\"gt\") || \"0\";\n    const totalGames = parseInt(gt, 10) || 0;\n\n    let char1Score = 0;\n    let char2Score = 0;\n\n    const gameInfos: Array<GameInfo | null> = [];\n\n    for (let i = 1; i <= totalGames; i++) {\n      const gameInfoString = params.get(`g${i}`);\n\n      if (!gameInfoString) {\n        // Game is undefined\n        gameInfos.push(null);\n        continue;\n      }\n\n      // Generate the game info\n      const [stageId, duration, char1, color1, result1, char2, color2, result2] = gameInfoString.split(\",\");\n      gameInfos.push({\n        stageId,\n        duration,\n        char1,\n        color1,\n        result1,\n        char2,\n        color2,\n        result2,\n      });\n\n      // Update the scores\n      if (result1 === \"winner\") {\n        char1Score += 1;\n      }\n\n      if (result2 === \"winner\") {\n        char2Score += 1;\n      }\n    }\n\n    setGames(gameInfos);\n    setScore({ left: char1Score, right: char2Score });\n  }, [location]);\n\n  const setParam = (gameNumber: number, val: Partial<GameInfo>) => {\n    const currentGameData = games[gameNumber - 1];\n    const newValues = Object.assign({}, currentGameData, val);\n    const { stageId, duration, char1, color1, result1, char2, color2, result2 } = newValues;\n    const infoString = [stageId, duration, char1, color1, result1, char2, color2, result2].join(\",\");\n\n    const params = new URLSearchParams(location.search);\n    params.set(`g${gameNumber}`, infoString);\n    const search = \"?\" + params.toString();\n    history.push({\n      pathname: location.pathname,\n      search,\n    });\n  };\n\n  return {\n    games,\n    score,\n    setGame: setParam,\n  };\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { useParam } from \"lib/hooks\";\nimport { PortColor } from \"lib/portColor\";\nimport React from \"react\";\nimport { Theme } from \"styles/theme\";\n\nimport { CharDisplay } from \"./CharDisplay\";\nimport { NameBlock } from \"./NameBlock\";\nimport { StatDisplay } from \"./StatDisplay\";\n\nconst Outer = styled.div`\n  position: relative;\n  width: 100%;\n  display: grid;\n  grid-template-columns: 20% 60% 20%;\n`;\n\nconst NameBlockContainer = styled.div<{\n  align: \"left\" | \"right\";\n}>`\n  ${(p) => `\n  width: 20%;\n  position: absolute;\n  ${p.align}: 0;\n  margin-${p.align}: 2rem;\n  bottom: 15%;\n  `}\n`;\n\nexport const RenderDisplay: React.FC<Theme> = (theme) => {\n  const [leftColor] = useParam(\"leftColor\", PortColor.P1);\n  const [rightColor] = useParam(\"rightColor\", PortColor.P2);\n  return (\n    <Outer>\n      <div\n        css={css`\n          justify-self: end;\n          width: 100%;\n        `}\n      >\n        <CharDisplay theme={leftColor} charParam=\"char1\" colorParam=\"color1\" align=\"right\" />\n      </div>\n      <StatDisplay leftColor={leftColor} rightColor={rightColor} {...theme} />\n      <div\n        css={css`\n          width: 100%;\n        `}\n      >\n        <CharDisplay theme={rightColor} charParam=\"char2\" colorParam=\"color2\" align=\"left\" />\n      </div>\n      <NameBlockContainer align=\"left\">\n        <NameBlock nameParam=\"name1\" subtitleParam=\"sub1\" {...theme} />\n      </NameBlockContainer>\n      <NameBlockContainer align=\"right\">\n        <NameBlock nameParam=\"name2\" subtitleParam=\"sub2\" {...theme} />\n      </NameBlockContainer>\n    </Outer>\n  );\n};\n","/** @jsx jsx */\nimport { css, Global, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { ExternalLink as A } from \"components/ExternalLink\";\nimport { Header } from \"components/Header\";\nimport { Options } from \"containers/Options\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GlobalTheme } from \"styles/theme\";\n\nimport { RenderDisplay } from \"../containers/RenderDisplay\";\nimport poweredByImage from \"../styles/images/powered-by.png\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport interface RenderViewProps {\n  showSlippiLogo?: boolean;\n}\n\nexport const RenderView: React.FC<RenderViewProps> = ({ showSlippiLogo }) => {\n  const [primaryColor] = useParam(\"primaryColor\");\n  const [secondaryColor] = useParam(\"secondaryColor\");\n  return (\n    <div\n      css={css`\n        width: 1700px;\n        height: 980px;\n        margin: 0 auto;\n      `}\n    >\n      <Container>\n        <GlobalTheme primaryColor={primaryColor} secondaryColor={secondaryColor} />\n        <Link to=\"/\" title=\"Home\">\n          <Header>Post Match Stats</Header>\n        </Link>\n        <div\n          css={css`\n            margin-bottom: ${showSlippiLogo ? \"2rem\" : \"4rem\"};\n            & > a {\n              display: ${showSlippiLogo ? \"block\" : \"none\"};\n            }\n          `}\n        >\n          <A href=\"https://slippi.gg\">\n            <img\n              alt=\"Powered by Slippi\"\n              title=\"Open Slippi.gg homepage\"\n              src={poweredByImage}\n              css={css`\n                max-height: 5rem;\n              `}\n            />\n          </A>\n        </div>\n        <RenderDisplay primaryColor={primaryColor} secondaryColor={secondaryColor} />\n        <Settings />\n      </Container>\n    </div>\n  );\n};\n\nconst Settings: React.FC = () => {\n  return (\n    <React.Fragment>\n      <Global\n        styles={css`\n          body:hover .settings {\n            opacity: 1;\n          }\n          .settings {\n            opacity: 0;\n            transition: opacity 0.2s ease-in-out;\n          }\n        `}\n      />\n      <div className=\"settings\">\n        <Options />\n      </div>\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { hot } from \"react-hot-loader/root\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { RandomView } from \"views/RandomView\";\n\nimport { AppProvider } from \"./store\";\nimport { MainView } from \"./views/MainView\";\nimport { RenderView } from \"./views/RenderView\";\n\nconst App: React.FC = () => {\n  return (\n    <AppProvider>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Route exact path=\"/\" component={MainView} />\n        <Route path=\"/render\" component={RenderView} />\n        <Route path=\"/random\" component={RandomView} />\n      </Router>\n    </AppProvider>\n  );\n};\n\nexport default hot(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"./index.scss\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import moment from \"moment\";\n\nexport function convertFrameCountToDurationString(frameCount: number): string {\n  // Enforce positive numbers only\n  const totalFrames = Math.max(frameCount, 0);\n  const duration = moment.duration(totalFrames / 60, \"seconds\");\n  return moment.utc(duration.as(\"milliseconds\")).format(\"m:ss\");\n}\n\nexport function reorder(list: any[], startIndex: number, endIndex: number) {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n}\n","export enum PortColor {\n  P1 = \"#f52e2e\",\n  P2 = \"#5463ff\",\n  P3 = \"#ffc717\",\n  P4 = \"#1f9e40\",\n}\n\nexport function getPortColor(portNumber: number): string {\n  switch (portNumber) {\n    case 1:\n      return PortColor.P1;\n    case 2:\n      return PortColor.P2;\n    case 3:\n      return PortColor.P3;\n    case 4:\n      return PortColor.P4;\n    default:\n      return PortColor.P1;\n  }\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { hasOpacity } from \"styles/opacity\";\n\nexport const PrimaryButton = styled.button<{\n  backgroundColor: string;\n  color: string;\n}>`\n  background: ${(p) => p.backgroundColor};\n  border: none;\n  color: ${(p) => p.color};\n  cursor: pointer;\n  font: inherit;\n  padding: 1rem 0rem;\n  width: 100%;\n  font-weight: 700;\n  font-size: 3rem;\n  opacity: 0.8;\n  transition: opacity 0.2s ease-in-out;\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n  &:hover:enabled {\n    opacity: 1;\n  }\n`;\n\nexport const SecondaryButton: React.FC<Record<string, any>> = (props) => {\n  const { align, children, ...rest } = props;\n  const alignment = align || \"center\";\n  return (\n    <div\n      css={css`\n        user-select: none;\n        text-align: ${alignment};\n      `}\n    >\n      <span\n        css={css`\n          display: inline-block;\n          font-size: 1.4rem;\n          cursor: pointer;\n          margin: 0.5rem 0;\n          padding: 0 0.5rem;\n          ${hasOpacity(0.5)}\n          &:hover {\n            text-decoration: underline;\n          }\n        `}\n        {...rest}\n      >\n        {children}\n      </span>\n    </div>\n  );\n};\n"],"sourceRoot":""}